// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace atwork_pb_msgs {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class RobotInfo {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_atwork_pb_msgs_Robot__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.Robot, global::atwork_pb_msgs.Robot.Builder> internal__static_atwork_pb_msgs_Robot__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_atwork_pb_msgs_RobotInfo__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.RobotInfo, global::atwork_pb_msgs.RobotInfo.Builder> internal__static_atwork_pb_msgs_RobotInfo__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static RobotInfo() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            string.Concat(
              "Cg9Sb2JvdEluZm8ucHJvdG8SDmF0d29ya19wYl9tc2dzGgpUaW1lLnByb3Rv", 
              "IpYBCgVSb2JvdBIMCgRuYW1lGAEgAigJEgwKBHRlYW0YAiACKAkSDAoEaG9z", 
              "dBgDIAIoCRInCglsYXN0X3NlZW4YBCACKAsyFC5hdHdvcmtfcGJfbXNncy5U", 
              "aW1lEhIKCmlzX2xvZ2dpbmcYBSABKAgiJgoIQ29tcFR5cGUSDAoHQ09NUF9J", 
              "RBDQDxIMCghNU0dfVFlQRRAJIloKCVJvYm90SW5mbxIlCgZyb2JvdHMYASAD", 
              "KAsyFS5hdHdvcmtfcGJfbXNncy5Sb2JvdCImCghDb21wVHlwZRIMCgdDT01Q", 
              "X0lEENAPEgwKCE1TR19UWVBFEAhCKQoWb3JnLmF0d29yay5jb21tb25fbXNn", 
            "c0IPUm9ib3RJbmZvUHJvdG9z"));
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_atwork_pb_msgs_Robot__Descriptor = Descriptor.MessageTypes[0];
          internal__static_atwork_pb_msgs_Robot__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.Robot, global::atwork_pb_msgs.Robot.Builder>(internal__static_atwork_pb_msgs_Robot__Descriptor,
                  new string[] { "Name", "Team", "Host", "LastSeen", "IsLogging", });
          internal__static_atwork_pb_msgs_RobotInfo__Descriptor = Descriptor.MessageTypes[1];
          internal__static_atwork_pb_msgs_RobotInfo__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.RobotInfo, global::atwork_pb_msgs.RobotInfo.Builder>(internal__static_atwork_pb_msgs_RobotInfo__Descriptor,
                  new string[] { "Robots", });
          return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::atwork_pb_msgs.Proto.Time.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Robot : pb::GeneratedMessage<Robot, Robot.Builder> {
    private Robot() { }
    private static readonly Robot defaultInstance = new Robot().MakeReadOnly();
    private static readonly string[] _robotFieldNames = new string[] { "host", "is_logging", "last_seen", "name", "team" };
    private static readonly uint[] _robotFieldTags = new uint[] { 26, 40, 34, 10, 18 };
    public static Robot DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Robot DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Robot ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::atwork_pb_msgs.Proto.RobotInfo.internal__static_atwork_pb_msgs_Robot__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Robot, Robot.Builder> InternalFieldAccessors {
      get { return global::atwork_pb_msgs.Proto.RobotInfo.internal__static_atwork_pb_msgs_Robot__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum CompType {
        COMP_ID = 2000,
        MSG_TYPE = 9,
      }
      
    }
    #endregion
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int TeamFieldNumber = 2;
    private bool hasTeam;
    private string team_ = "";
    public bool HasTeam {
      get { return hasTeam; }
    }
    public string Team {
      get { return team_; }
    }
    
    public const int HostFieldNumber = 3;
    private bool hasHost;
    private string host_ = "";
    public bool HasHost {
      get { return hasHost; }
    }
    public string Host {
      get { return host_; }
    }
    
    public const int LastSeenFieldNumber = 4;
    private bool hasLastSeen;
    private global::atwork_pb_msgs.Time lastSeen_;
    public bool HasLastSeen {
      get { return hasLastSeen; }
    }
    public global::atwork_pb_msgs.Time LastSeen {
      get { return lastSeen_ ?? global::atwork_pb_msgs.Time.DefaultInstance; }
    }
    
    public const int IsLoggingFieldNumber = 5;
    private bool hasIsLogging;
    private bool isLogging_;
    public bool HasIsLogging {
      get { return hasIsLogging; }
    }
    public bool IsLogging {
      get { return isLogging_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        if (!hasTeam) return false;
        if (!hasHost) return false;
        if (!hasLastSeen) return false;
        if (!LastSeen.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _robotFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[3], Name);
      }
      if (hasTeam) {
        output.WriteString(2, field_names[4], Team);
      }
      if (hasHost) {
        output.WriteString(3, field_names[0], Host);
      }
      if (hasLastSeen) {
        output.WriteMessage(4, field_names[2], LastSeen);
      }
      if (hasIsLogging) {
        output.WriteBool(5, field_names[1], IsLogging);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasTeam) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Team);
      }
      if (hasHost) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Host);
      }
      if (hasLastSeen) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, LastSeen);
      }
      if (hasIsLogging) {
        size += pb::CodedOutputStream.ComputeBoolSize(5, IsLogging);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Robot ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Robot ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Robot ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Robot ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Robot ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Robot ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Robot ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Robot ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Robot ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Robot ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Robot MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Robot prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Robot, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Robot cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Robot result;
      
      private Robot PrepareBuilder() {
        if (resultIsReadOnly) {
          Robot original = result;
          result = new Robot();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Robot MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::atwork_pb_msgs.Robot.Descriptor; }
      }
      
      public override Robot DefaultInstanceForType {
        get { return global::atwork_pb_msgs.Robot.DefaultInstance; }
      }
      
      public override Robot BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Robot) {
          return MergeFrom((Robot) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Robot other) {
        if (other == global::atwork_pb_msgs.Robot.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasTeam) {
          Team = other.Team;
        }
        if (other.HasHost) {
          Host = other.Host;
        }
        if (other.HasLastSeen) {
          MergeLastSeen(other.LastSeen);
        }
        if (other.HasIsLogging) {
          IsLogging = other.IsLogging;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_robotFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _robotFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 18: {
              result.hasTeam = input.ReadString(ref result.team_);
              break;
            }
            case 26: {
              result.hasHost = input.ReadString(ref result.host_);
              break;
            }
            case 34: {
              global::atwork_pb_msgs.Time.Builder subBuilder = global::atwork_pb_msgs.Time.CreateBuilder();
              if (result.hasLastSeen) {
                subBuilder.MergeFrom(LastSeen);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              LastSeen = subBuilder.BuildPartial();
              break;
            }
            case 40: {
              result.hasIsLogging = input.ReadBool(ref result.isLogging_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasTeam {
        get { return result.hasTeam; }
      }
      public string Team {
        get { return result.Team; }
        set { SetTeam(value); }
      }
      public Builder SetTeam(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTeam = true;
        result.team_ = value;
        return this;
      }
      public Builder ClearTeam() {
        PrepareBuilder();
        result.hasTeam = false;
        result.team_ = "";
        return this;
      }
      
      public bool HasHost {
        get { return result.hasHost; }
      }
      public string Host {
        get { return result.Host; }
        set { SetHost(value); }
      }
      public Builder SetHost(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder ClearHost() {
        PrepareBuilder();
        result.hasHost = false;
        result.host_ = "";
        return this;
      }
      
      public bool HasLastSeen {
       get { return result.hasLastSeen; }
      }
      public global::atwork_pb_msgs.Time LastSeen {
        get { return result.LastSeen; }
        set { SetLastSeen(value); }
      }
      public Builder SetLastSeen(global::atwork_pb_msgs.Time value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastSeen = true;
        result.lastSeen_ = value;
        return this;
      }
      public Builder SetLastSeen(global::atwork_pb_msgs.Time.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasLastSeen = true;
        result.lastSeen_ = builderForValue.Build();
        return this;
      }
      public Builder MergeLastSeen(global::atwork_pb_msgs.Time value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasLastSeen &&
            result.lastSeen_ != global::atwork_pb_msgs.Time.DefaultInstance) {
            result.lastSeen_ = global::atwork_pb_msgs.Time.CreateBuilder(result.lastSeen_).MergeFrom(value).BuildPartial();
        } else {
          result.lastSeen_ = value;
        }
        result.hasLastSeen = true;
        return this;
      }
      public Builder ClearLastSeen() {
        PrepareBuilder();
        result.hasLastSeen = false;
        result.lastSeen_ = null;
        return this;
      }
      
      public bool HasIsLogging {
        get { return result.hasIsLogging; }
      }
      public bool IsLogging {
        get { return result.IsLogging; }
        set { SetIsLogging(value); }
      }
      public Builder SetIsLogging(bool value) {
        PrepareBuilder();
        result.hasIsLogging = true;
        result.isLogging_ = value;
        return this;
      }
      public Builder ClearIsLogging() {
        PrepareBuilder();
        result.hasIsLogging = false;
        result.isLogging_ = false;
        return this;
      }
    }
    static Robot() {
      object.ReferenceEquals(global::atwork_pb_msgs.Proto.RobotInfo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class RobotInfo : pb::GeneratedMessage<RobotInfo, RobotInfo.Builder> {
    private RobotInfo() { }
    private static readonly RobotInfo defaultInstance = new RobotInfo().MakeReadOnly();
    private static readonly string[] _robotInfoFieldNames = new string[] { "robots" };
    private static readonly uint[] _robotInfoFieldTags = new uint[] { 10 };
    public static RobotInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override RobotInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override RobotInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::atwork_pb_msgs.Proto.RobotInfo.internal__static_atwork_pb_msgs_RobotInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<RobotInfo, RobotInfo.Builder> InternalFieldAccessors {
      get { return global::atwork_pb_msgs.Proto.RobotInfo.internal__static_atwork_pb_msgs_RobotInfo__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum CompType {
        COMP_ID = 2000,
        MSG_TYPE = 8,
      }
      
    }
    #endregion
    
    public const int RobotsFieldNumber = 1;
    private pbc::PopsicleList<global::atwork_pb_msgs.Robot> robots_ = new pbc::PopsicleList<global::atwork_pb_msgs.Robot>();
    public scg::IList<global::atwork_pb_msgs.Robot> RobotsList {
      get { return robots_; }
    }
    public int RobotsCount {
      get { return robots_.Count; }
    }
    public global::atwork_pb_msgs.Robot GetRobots(int index) {
      return robots_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::atwork_pb_msgs.Robot element in RobotsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _robotInfoFieldNames;
      if (robots_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], robots_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::atwork_pb_msgs.Robot element in RobotsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static RobotInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RobotInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RobotInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static RobotInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static RobotInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RobotInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static RobotInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static RobotInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static RobotInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static RobotInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private RobotInfo MakeReadOnly() {
      robots_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(RobotInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<RobotInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(RobotInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private RobotInfo result;
      
      private RobotInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          RobotInfo original = result;
          result = new RobotInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override RobotInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::atwork_pb_msgs.RobotInfo.Descriptor; }
      }
      
      public override RobotInfo DefaultInstanceForType {
        get { return global::atwork_pb_msgs.RobotInfo.DefaultInstance; }
      }
      
      public override RobotInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is RobotInfo) {
          return MergeFrom((RobotInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(RobotInfo other) {
        if (other == global::atwork_pb_msgs.RobotInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.robots_.Count != 0) {
          result.robots_.Add(other.robots_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_robotInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _robotInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.robots_, global::atwork_pb_msgs.Robot.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::atwork_pb_msgs.Robot> RobotsList {
        get { return PrepareBuilder().robots_; }
      }
      public int RobotsCount {
        get { return result.RobotsCount; }
      }
      public global::atwork_pb_msgs.Robot GetRobots(int index) {
        return result.GetRobots(index);
      }
      public Builder SetRobots(int index, global::atwork_pb_msgs.Robot value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.robots_[index] = value;
        return this;
      }
      public Builder SetRobots(int index, global::atwork_pb_msgs.Robot.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.robots_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddRobots(global::atwork_pb_msgs.Robot value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.robots_.Add(value);
        return this;
      }
      public Builder AddRobots(global::atwork_pb_msgs.Robot.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.robots_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeRobots(scg::IEnumerable<global::atwork_pb_msgs.Robot> values) {
        PrepareBuilder();
        result.robots_.Add(values);
        return this;
      }
      public Builder ClearRobots() {
        PrepareBuilder();
        result.robots_.Clear();
        return this;
      }
    }
    static RobotInfo() {
      object.ReferenceEquals(global::atwork_pb_msgs.Proto.RobotInfo.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
