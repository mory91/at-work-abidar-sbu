// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace atwork_pb_msgs {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Inventory {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_atwork_pb_msgs_ObjectIdentifier__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.ObjectIdentifier, global::atwork_pb_msgs.ObjectIdentifier.Builder> internal__static_atwork_pb_msgs_ObjectIdentifier__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_atwork_pb_msgs_LocationIdentifier__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.LocationIdentifier, global::atwork_pb_msgs.LocationIdentifier.Builder> internal__static_atwork_pb_msgs_LocationIdentifier__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_atwork_pb_msgs_Inventory__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.Inventory, global::atwork_pb_msgs.Inventory.Builder> internal__static_atwork_pb_msgs_Inventory__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_atwork_pb_msgs_Inventory_Item__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.Inventory.Types.Item, global::atwork_pb_msgs.Inventory.Types.Item.Builder> internal__static_atwork_pb_msgs_Inventory_Item__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_atwork_pb_msgs_Transaction__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.Transaction, global::atwork_pb_msgs.Transaction.Builder> internal__static_atwork_pb_msgs_Transaction__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_atwork_pb_msgs_TransactionLog__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.TransactionLog, global::atwork_pb_msgs.TransactionLog.Builder> internal__static_atwork_pb_msgs_TransactionLog__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static Inventory() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            string.Concat(
              "Cg9JbnZlbnRvcnkucHJvdG8SDmF0d29ya19wYl9tc2dzIt8CChBPYmplY3RJ", 
              "ZGVudGlmaWVyEjkKBHR5cGUYASACKA4yKy5hdHdvcmtfcGJfbXNncy5PYmpl", 
              "Y3RJZGVudGlmaWVyLk9iamVjdFR5cGUSDwoHdHlwZV9pZBgCIAEoAxITCgtp", 
              "bnN0YW5jZV9pZBgDIAEoAxITCgtkZXNjcmlwdGlvbhgEIAEoCSLUAQoKT2Jq", 
              "ZWN0VHlwZRIMCghGMjBfMjBfQhABEgwKCEYyMF8yMF9HEAISDAoIUzQwXzQw", 
              "X0IQAxIMCghTNDBfNDBfRxAEEgsKB00yMF8xMDAQBRIHCgNNMjAQBhIHCgNN", 
              "MzAQBxIHCgNSMjAQCBIPCgtCRUFSSU5HX0JPWBAJEgsKB0JFQVJJTkcQChII", 
              "CgRBWElTEAsSEQoNRElTVEFOQ0VfVFVCRRAMEgkKBU1PVE9SEA0SDwoLQ09O", 
              "VEFJTkVSX0IQDhIPCgtDT05UQUlORVJfUhAPIsABChJMb2NhdGlvbklkZW50", 
              "aWZpZXISPQoEdHlwZRgBIAIoDjIvLmF0d29ya19wYl9tc2dzLkxvY2F0aW9u", 
              "SWRlbnRpZmllci5Mb2NhdGlvblR5cGUSEwoLaW5zdGFuY2VfaWQYAiACKAQS", 
              "EwoLZGVzY3JpcHRpb24YAyABKAkiQQoMTG9jYXRpb25UeXBlEgYKAlNIEAES", 
              "BgoCV1MQAhIGCgJDQhADEgYKAldQEAQSBgoCUFAQBRIJCgVST0JPVBAGIsQC", 
              "CglJbnZlbnRvcnkSLQoFaXRlbXMYASADKAsyHi5hdHdvcmtfcGJfbXNncy5J", 
              "bnZlbnRvcnkuSXRlbRreAQoESXRlbRIwCgZvYmplY3QYASACKAsyIC5hdHdv", 
              "cmtfcGJfbXNncy5PYmplY3RJZGVudGlmaWVyEhAKCHF1YW50aXR5GAIgASgE", 
              "EjMKCWNvbnRhaW5lchgDIAEoCzIgLmF0d29ya19wYl9tc2dzLk9iamVjdElk", 
              "ZW50aWZpZXISNAoIbG9jYXRpb24YBCABKAsyIi5hdHdvcmtfcGJfbXNncy5M", 
              "b2NhdGlvbklkZW50aWZpZXIiJwoIQ29tcFR5cGUSDAoHQ09NUF9JRBDQDxIN", 
              "CghNU0dfVFlQRRDLASInCghDb21wVHlwZRIMCgdDT01QX0lEENAPEg0KCE1T", 
              "R19UWVBFEMgBIsgCCgtUcmFuc2FjdGlvbhIWCg50cmFuc2FjdGlvbl9pZBgB", 
              "IAIoBBIQCghvcmRlcl9pZBgCIAIoBBIwCgZvYmplY3QYAyACKAsyIC5hdHdv", 
              "cmtfcGJfbXNncy5PYmplY3RJZGVudGlmaWVyEhAKCHF1YW50aXR5GAQgASgN", 
              "EjIKBmFjdGlvbhgFIAIoDjIiLmF0d29ya19wYl9tc2dzLlRyYW5zYWN0aW9u", 
              "LkFjdGlvbhIyCgZzb3VyY2UYBiABKAsyIi5hdHdvcmtfcGJfbXNncy5Mb2Nh", 
              "dGlvbklkZW50aWZpZXISNwoLZGVzdGluYXRpb24YByABKAsyIi5hdHdvcmtf", 
              "cGJfbXNncy5Mb2NhdGlvbklkZW50aWZpZXIiKgoGQWN0aW9uEgoKBklOU0VS", 
              "VBABEgoKBlJFTU9WRRACEggKBE1PVkUQAyJsCg5UcmFuc2FjdGlvbkxvZxIx", 
              "Cgx0cmFuc2FjdGlvbnMYASADKAsyGy5hdHdvcmtfcGJfbXNncy5UcmFuc2Fj", 
              "dGlvbiInCghDb21wVHlwZRIMCgdDT01QX0lEENAPEg0KCE1TR19UWVBFEMkB", 
            "QikKFm9yZy5hdHdvcmsuY29tbW9uX21zZ3NCD0ludmVudG9yeVByb3Rvcw=="));
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_atwork_pb_msgs_ObjectIdentifier__Descriptor = Descriptor.MessageTypes[0];
          internal__static_atwork_pb_msgs_ObjectIdentifier__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.ObjectIdentifier, global::atwork_pb_msgs.ObjectIdentifier.Builder>(internal__static_atwork_pb_msgs_ObjectIdentifier__Descriptor,
                  new string[] { "Type", "TypeId", "InstanceId", "Description", });
          internal__static_atwork_pb_msgs_LocationIdentifier__Descriptor = Descriptor.MessageTypes[1];
          internal__static_atwork_pb_msgs_LocationIdentifier__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.LocationIdentifier, global::atwork_pb_msgs.LocationIdentifier.Builder>(internal__static_atwork_pb_msgs_LocationIdentifier__Descriptor,
                  new string[] { "Type", "InstanceId", "Description", });
          internal__static_atwork_pb_msgs_Inventory__Descriptor = Descriptor.MessageTypes[2];
          internal__static_atwork_pb_msgs_Inventory__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.Inventory, global::atwork_pb_msgs.Inventory.Builder>(internal__static_atwork_pb_msgs_Inventory__Descriptor,
                  new string[] { "Items", });
          internal__static_atwork_pb_msgs_Inventory_Item__Descriptor = internal__static_atwork_pb_msgs_Inventory__Descriptor.NestedTypes[0];
          internal__static_atwork_pb_msgs_Inventory_Item__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.Inventory.Types.Item, global::atwork_pb_msgs.Inventory.Types.Item.Builder>(internal__static_atwork_pb_msgs_Inventory_Item__Descriptor,
                  new string[] { "Object", "Quantity", "Container", "Location", });
          internal__static_atwork_pb_msgs_Transaction__Descriptor = Descriptor.MessageTypes[3];
          internal__static_atwork_pb_msgs_Transaction__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.Transaction, global::atwork_pb_msgs.Transaction.Builder>(internal__static_atwork_pb_msgs_Transaction__Descriptor,
                  new string[] { "TransactionId", "OrderId", "Object", "Quantity", "Action", "Source", "Destination", });
          internal__static_atwork_pb_msgs_TransactionLog__Descriptor = Descriptor.MessageTypes[4];
          internal__static_atwork_pb_msgs_TransactionLog__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.TransactionLog, global::atwork_pb_msgs.TransactionLog.Builder>(internal__static_atwork_pb_msgs_TransactionLog__Descriptor,
                  new string[] { "Transactions", });
          return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class ObjectIdentifier : pb::GeneratedMessage<ObjectIdentifier, ObjectIdentifier.Builder> {
    private ObjectIdentifier() { }
    private static readonly ObjectIdentifier defaultInstance = new ObjectIdentifier().MakeReadOnly();
    private static readonly string[] _objectIdentifierFieldNames = new string[] { "description", "instance_id", "type", "type_id" };
    private static readonly uint[] _objectIdentifierFieldTags = new uint[] { 34, 24, 8, 16 };
    public static ObjectIdentifier DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override ObjectIdentifier DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override ObjectIdentifier ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::atwork_pb_msgs.Proto.Inventory.internal__static_atwork_pb_msgs_ObjectIdentifier__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<ObjectIdentifier, ObjectIdentifier.Builder> InternalFieldAccessors {
      get { return global::atwork_pb_msgs.Proto.Inventory.internal__static_atwork_pb_msgs_ObjectIdentifier__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum ObjectType {
        F20_20_B = 1,
        F20_20_G = 2,
        S40_40_B = 3,
        S40_40_G = 4,
        M20_100 = 5,
        M20 = 6,
        M30 = 7,
        R20 = 8,
        BEARING_BOX = 9,
        BEARING = 10,
        AXIS = 11,
        DISTANCE_TUBE = 12,
        MOTOR = 13,
        CONTAINER_B = 14,
        CONTAINER_R = 15,
      }
      
    }
    #endregion
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::atwork_pb_msgs.ObjectIdentifier.Types.ObjectType type_ = global::atwork_pb_msgs.ObjectIdentifier.Types.ObjectType.F20_20_B;
    public bool HasType {
      get { return hasType; }
    }
    public global::atwork_pb_msgs.ObjectIdentifier.Types.ObjectType Type {
      get { return type_; }
    }
    
    public const int TypeIdFieldNumber = 2;
    private bool hasTypeId;
    private long typeId_;
    public bool HasTypeId {
      get { return hasTypeId; }
    }
    public long TypeId {
      get { return typeId_; }
    }
    
    public const int InstanceIdFieldNumber = 3;
    private bool hasInstanceId;
    private long instanceId_;
    public bool HasInstanceId {
      get { return hasInstanceId; }
    }
    public long InstanceId {
      get { return instanceId_; }
    }
    
    public const int DescriptionFieldNumber = 4;
    private bool hasDescription;
    private string description_ = "";
    public bool HasDescription {
      get { return hasDescription; }
    }
    public string Description {
      get { return description_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _objectIdentifierFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[2], (int) Type, Type);
      }
      if (hasTypeId) {
        output.WriteInt64(2, field_names[3], TypeId);
      }
      if (hasInstanceId) {
        output.WriteInt64(3, field_names[1], InstanceId);
      }
      if (hasDescription) {
        output.WriteString(4, field_names[0], Description);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
      }
      if (hasTypeId) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, TypeId);
      }
      if (hasInstanceId) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, InstanceId);
      }
      if (hasDescription) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Description);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static ObjectIdentifier ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ObjectIdentifier ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ObjectIdentifier ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static ObjectIdentifier ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static ObjectIdentifier ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ObjectIdentifier ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static ObjectIdentifier ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static ObjectIdentifier ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static ObjectIdentifier ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static ObjectIdentifier ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private ObjectIdentifier MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(ObjectIdentifier prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<ObjectIdentifier, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(ObjectIdentifier cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private ObjectIdentifier result;
      
      private ObjectIdentifier PrepareBuilder() {
        if (resultIsReadOnly) {
          ObjectIdentifier original = result;
          result = new ObjectIdentifier();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override ObjectIdentifier MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::atwork_pb_msgs.ObjectIdentifier.Descriptor; }
      }
      
      public override ObjectIdentifier DefaultInstanceForType {
        get { return global::atwork_pb_msgs.ObjectIdentifier.DefaultInstance; }
      }
      
      public override ObjectIdentifier BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is ObjectIdentifier) {
          return MergeFrom((ObjectIdentifier) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(ObjectIdentifier other) {
        if (other == global::atwork_pb_msgs.ObjectIdentifier.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasTypeId) {
          TypeId = other.TypeId;
        }
        if (other.HasInstanceId) {
          InstanceId = other.InstanceId;
        }
        if (other.HasDescription) {
          Description = other.Description;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_objectIdentifierFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _objectIdentifierFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasTypeId = input.ReadInt64(ref result.typeId_);
              break;
            }
            case 24: {
              result.hasInstanceId = input.ReadInt64(ref result.instanceId_);
              break;
            }
            case 34: {
              result.hasDescription = input.ReadString(ref result.description_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::atwork_pb_msgs.ObjectIdentifier.Types.ObjectType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::atwork_pb_msgs.ObjectIdentifier.Types.ObjectType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::atwork_pb_msgs.ObjectIdentifier.Types.ObjectType.F20_20_B;
        return this;
      }
      
      public bool HasTypeId {
        get { return result.hasTypeId; }
      }
      public long TypeId {
        get { return result.TypeId; }
        set { SetTypeId(value); }
      }
      public Builder SetTypeId(long value) {
        PrepareBuilder();
        result.hasTypeId = true;
        result.typeId_ = value;
        return this;
      }
      public Builder ClearTypeId() {
        PrepareBuilder();
        result.hasTypeId = false;
        result.typeId_ = 0L;
        return this;
      }
      
      public bool HasInstanceId {
        get { return result.hasInstanceId; }
      }
      public long InstanceId {
        get { return result.InstanceId; }
        set { SetInstanceId(value); }
      }
      public Builder SetInstanceId(long value) {
        PrepareBuilder();
        result.hasInstanceId = true;
        result.instanceId_ = value;
        return this;
      }
      public Builder ClearInstanceId() {
        PrepareBuilder();
        result.hasInstanceId = false;
        result.instanceId_ = 0L;
        return this;
      }
      
      public bool HasDescription {
        get { return result.hasDescription; }
      }
      public string Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = "";
        return this;
      }
    }
    static ObjectIdentifier() {
      object.ReferenceEquals(global::atwork_pb_msgs.Proto.Inventory.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class LocationIdentifier : pb::GeneratedMessage<LocationIdentifier, LocationIdentifier.Builder> {
    private LocationIdentifier() { }
    private static readonly LocationIdentifier defaultInstance = new LocationIdentifier().MakeReadOnly();
    private static readonly string[] _locationIdentifierFieldNames = new string[] { "description", "instance_id", "type" };
    private static readonly uint[] _locationIdentifierFieldTags = new uint[] { 26, 16, 8 };
    public static LocationIdentifier DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override LocationIdentifier DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override LocationIdentifier ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::atwork_pb_msgs.Proto.Inventory.internal__static_atwork_pb_msgs_LocationIdentifier__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<LocationIdentifier, LocationIdentifier.Builder> InternalFieldAccessors {
      get { return global::atwork_pb_msgs.Proto.Inventory.internal__static_atwork_pb_msgs_LocationIdentifier__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum LocationType {
        SH = 1,
        WS = 2,
        CB = 3,
        WP = 4,
        PP = 5,
        ROBOT = 6,
      }
      
    }
    #endregion
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::atwork_pb_msgs.LocationIdentifier.Types.LocationType type_ = global::atwork_pb_msgs.LocationIdentifier.Types.LocationType.SH;
    public bool HasType {
      get { return hasType; }
    }
    public global::atwork_pb_msgs.LocationIdentifier.Types.LocationType Type {
      get { return type_; }
    }
    
    public const int InstanceIdFieldNumber = 2;
    private bool hasInstanceId;
    private ulong instanceId_;
    public bool HasInstanceId {
      get { return hasInstanceId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong InstanceId {
      get { return instanceId_; }
    }
    
    public const int DescriptionFieldNumber = 3;
    private bool hasDescription;
    private string description_ = "";
    public bool HasDescription {
      get { return hasDescription; }
    }
    public string Description {
      get { return description_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        if (!hasInstanceId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _locationIdentifierFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[2], (int) Type, Type);
      }
      if (hasInstanceId) {
        output.WriteUInt64(2, field_names[1], InstanceId);
      }
      if (hasDescription) {
        output.WriteString(3, field_names[0], Description);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
      }
      if (hasInstanceId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, InstanceId);
      }
      if (hasDescription) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Description);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static LocationIdentifier ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LocationIdentifier ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LocationIdentifier ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static LocationIdentifier ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static LocationIdentifier ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LocationIdentifier ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static LocationIdentifier ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static LocationIdentifier ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static LocationIdentifier ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static LocationIdentifier ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private LocationIdentifier MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(LocationIdentifier prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<LocationIdentifier, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(LocationIdentifier cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private LocationIdentifier result;
      
      private LocationIdentifier PrepareBuilder() {
        if (resultIsReadOnly) {
          LocationIdentifier original = result;
          result = new LocationIdentifier();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override LocationIdentifier MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::atwork_pb_msgs.LocationIdentifier.Descriptor; }
      }
      
      public override LocationIdentifier DefaultInstanceForType {
        get { return global::atwork_pb_msgs.LocationIdentifier.DefaultInstance; }
      }
      
      public override LocationIdentifier BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is LocationIdentifier) {
          return MergeFrom((LocationIdentifier) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(LocationIdentifier other) {
        if (other == global::atwork_pb_msgs.LocationIdentifier.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasInstanceId) {
          InstanceId = other.InstanceId;
        }
        if (other.HasDescription) {
          Description = other.Description;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_locationIdentifierFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _locationIdentifierFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasInstanceId = input.ReadUInt64(ref result.instanceId_);
              break;
            }
            case 26: {
              result.hasDescription = input.ReadString(ref result.description_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::atwork_pb_msgs.LocationIdentifier.Types.LocationType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::atwork_pb_msgs.LocationIdentifier.Types.LocationType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::atwork_pb_msgs.LocationIdentifier.Types.LocationType.SH;
        return this;
      }
      
      public bool HasInstanceId {
        get { return result.hasInstanceId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong InstanceId {
        get { return result.InstanceId; }
        set { SetInstanceId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetInstanceId(ulong value) {
        PrepareBuilder();
        result.hasInstanceId = true;
        result.instanceId_ = value;
        return this;
      }
      public Builder ClearInstanceId() {
        PrepareBuilder();
        result.hasInstanceId = false;
        result.instanceId_ = 0UL;
        return this;
      }
      
      public bool HasDescription {
        get { return result.hasDescription; }
      }
      public string Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = "";
        return this;
      }
    }
    static LocationIdentifier() {
      object.ReferenceEquals(global::atwork_pb_msgs.Proto.Inventory.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Inventory : pb::GeneratedMessage<Inventory, Inventory.Builder> {
    private Inventory() { }
    private static readonly Inventory defaultInstance = new Inventory().MakeReadOnly();
    private static readonly string[] _inventoryFieldNames = new string[] { "items" };
    private static readonly uint[] _inventoryFieldTags = new uint[] { 10 };
    public static Inventory DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Inventory DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Inventory ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::atwork_pb_msgs.Proto.Inventory.internal__static_atwork_pb_msgs_Inventory__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Inventory, Inventory.Builder> InternalFieldAccessors {
      get { return global::atwork_pb_msgs.Proto.Inventory.internal__static_atwork_pb_msgs_Inventory__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum CompType {
        COMP_ID = 2000,
        MSG_TYPE = 200,
      }
      
      [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
      public sealed partial class Item : pb::GeneratedMessage<Item, Item.Builder> {
        private Item() { }
        private static readonly Item defaultInstance = new Item().MakeReadOnly();
        private static readonly string[] _itemFieldNames = new string[] { "container", "location", "object", "quantity" };
        private static readonly uint[] _itemFieldTags = new uint[] { 26, 34, 10, 16 };
        public static Item DefaultInstance {
          get { return defaultInstance; }
        }
        
        public override Item DefaultInstanceForType {
          get { return DefaultInstance; }
        }
        
        protected override Item ThisMessage {
          get { return this; }
        }
        
        public static pbd::MessageDescriptor Descriptor {
          get { return global::atwork_pb_msgs.Proto.Inventory.internal__static_atwork_pb_msgs_Inventory_Item__Descriptor; }
        }
        
        protected override pb::FieldAccess.FieldAccessorTable<Item, Item.Builder> InternalFieldAccessors {
          get { return global::atwork_pb_msgs.Proto.Inventory.internal__static_atwork_pb_msgs_Inventory_Item__FieldAccessorTable; }
        }
        
        #region Nested types
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static partial class Types {
          public enum CompType {
            COMP_ID = 2000,
            MSG_TYPE = 203,
          }
          
        }
        #endregion
        
        public const int ObjectFieldNumber = 1;
        private bool hasObject;
        private global::atwork_pb_msgs.ObjectIdentifier object_;
        public bool HasObject {
          get { return hasObject; }
        }
        public global::atwork_pb_msgs.ObjectIdentifier Object {
          get { return object_ ?? global::atwork_pb_msgs.ObjectIdentifier.DefaultInstance; }
        }
        
        public const int QuantityFieldNumber = 2;
        private bool hasQuantity;
        private ulong quantity_;
        public bool HasQuantity {
          get { return hasQuantity; }
        }
        [global::System.CLSCompliant(false)]
        public ulong Quantity {
          get { return quantity_; }
        }
        
        public const int ContainerFieldNumber = 3;
        private bool hasContainer;
        private global::atwork_pb_msgs.ObjectIdentifier container_;
        public bool HasContainer {
          get { return hasContainer; }
        }
        public global::atwork_pb_msgs.ObjectIdentifier Container {
          get { return container_ ?? global::atwork_pb_msgs.ObjectIdentifier.DefaultInstance; }
        }
        
        public const int LocationFieldNumber = 4;
        private bool hasLocation;
        private global::atwork_pb_msgs.LocationIdentifier location_;
        public bool HasLocation {
          get { return hasLocation; }
        }
        public global::atwork_pb_msgs.LocationIdentifier Location {
          get { return location_ ?? global::atwork_pb_msgs.LocationIdentifier.DefaultInstance; }
        }
        
        public override bool IsInitialized {
          get {
            if (!hasObject) return false;
            if (!Object.IsInitialized) return false;
            if (HasContainer) {
              if (!Container.IsInitialized) return false;
            }
            if (HasLocation) {
              if (!Location.IsInitialized) return false;
            }
            return true;
          }
        }
        
        public override void WriteTo(pb::ICodedOutputStream output) {
          CalcSerializedSize();
          string[] field_names = _itemFieldNames;
          if (hasObject) {
            output.WriteMessage(1, field_names[2], Object);
          }
          if (hasQuantity) {
            output.WriteUInt64(2, field_names[3], Quantity);
          }
          if (hasContainer) {
            output.WriteMessage(3, field_names[0], Container);
          }
          if (hasLocation) {
            output.WriteMessage(4, field_names[1], Location);
          }
          UnknownFields.WriteTo(output);
        }
        
        private int memoizedSerializedSize = -1;
        public override int SerializedSize {
          get {
            int size = memoizedSerializedSize;
            if (size != -1) return size;
            return CalcSerializedSize();
          }
        }
        
        private int CalcSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;
          
          size = 0;
          if (hasObject) {
            size += pb::CodedOutputStream.ComputeMessageSize(1, Object);
          }
          if (hasQuantity) {
            size += pb::CodedOutputStream.ComputeUInt64Size(2, Quantity);
          }
          if (hasContainer) {
            size += pb::CodedOutputStream.ComputeMessageSize(3, Container);
          }
          if (hasLocation) {
            size += pb::CodedOutputStream.ComputeMessageSize(4, Location);
          }
          size += UnknownFields.SerializedSize;
          memoizedSerializedSize = size;
          return size;
        }
        public static Item ParseFrom(pb::ByteString data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Item ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Item ParseFrom(byte[] data) {
          return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static Item ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static Item ParseFrom(global::System.IO.Stream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Item ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Item ParseDelimitedFrom(global::System.IO.Stream input) {
          return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static Item ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
          return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static Item ParseFrom(pb::ICodedInputStream input) {
          return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static Item ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
          return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        private Item MakeReadOnly() {
          return this;
        }
        
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(Item prototype) {
          return new Builder(prototype);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed partial class Builder : pb::GeneratedBuilder<Item, Builder> {
          protected override Builder ThisBuilder {
            get { return this; }
          }
          public Builder() {
            result = DefaultInstance;
            resultIsReadOnly = true;
          }
          internal Builder(Item cloneFrom) {
            result = cloneFrom;
            resultIsReadOnly = true;
          }
          
          private bool resultIsReadOnly;
          private Item result;
          
          private Item PrepareBuilder() {
            if (resultIsReadOnly) {
              Item original = result;
              result = new Item();
              resultIsReadOnly = false;
              MergeFrom(original);
            }
            return result;
          }
          
          public override bool IsInitialized {
            get { return result.IsInitialized; }
          }
          
          protected override Item MessageBeingBuilt {
            get { return PrepareBuilder(); }
          }
          
          public override Builder Clear() {
            result = DefaultInstance;
            resultIsReadOnly = true;
            return this;
          }
          
          public override Builder Clone() {
            if (resultIsReadOnly) {
              return new Builder(result);
            } else {
              return new Builder().MergeFrom(result);
            }
          }
          
          public override pbd::MessageDescriptor DescriptorForType {
            get { return global::atwork_pb_msgs.Inventory.Types.Item.Descriptor; }
          }
          
          public override Item DefaultInstanceForType {
            get { return global::atwork_pb_msgs.Inventory.Types.Item.DefaultInstance; }
          }
          
          public override Item BuildPartial() {
            if (resultIsReadOnly) {
              return result;
            }
            resultIsReadOnly = true;
            return result.MakeReadOnly();
          }
          
          public override Builder MergeFrom(pb::IMessage other) {
            if (other is Item) {
              return MergeFrom((Item) other);
            } else {
              base.MergeFrom(other);
              return this;
            }
          }
          
          public override Builder MergeFrom(Item other) {
            if (other == global::atwork_pb_msgs.Inventory.Types.Item.DefaultInstance) return this;
            PrepareBuilder();
            if (other.HasObject) {
              MergeObject(other.Object);
            }
            if (other.HasQuantity) {
              Quantity = other.Quantity;
            }
            if (other.HasContainer) {
              MergeContainer(other.Container);
            }
            if (other.HasLocation) {
              MergeLocation(other.Location);
            }
            this.MergeUnknownFields(other.UnknownFields);
            return this;
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input) {
            return MergeFrom(input, pb::ExtensionRegistry.Empty);
          }
          
          public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
            PrepareBuilder();
            pb::UnknownFieldSet.Builder unknownFields = null;
            uint tag;
            string field_name;
            while (input.ReadTag(out tag, out field_name)) {
              if(tag == 0 && field_name != null) {
                int field_ordinal = global::System.Array.BinarySearch(_itemFieldNames, field_name, global::System.StringComparer.Ordinal);
                if(field_ordinal >= 0)
                  tag = _itemFieldTags[field_ordinal];
                else {
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  continue;
                }
              }
              switch (tag) {
                case 0: {
                  throw pb::InvalidProtocolBufferException.InvalidTag();
                }
                default: {
                  if (pb::WireFormat.IsEndGroupTag(tag)) {
                    if (unknownFields != null) {
                      this.UnknownFields = unknownFields.Build();
                    }
                    return this;
                  }
                  if (unknownFields == null) {
                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                  }
                  ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
                  break;
                }
                case 10: {
                  global::atwork_pb_msgs.ObjectIdentifier.Builder subBuilder = global::atwork_pb_msgs.ObjectIdentifier.CreateBuilder();
                  if (result.hasObject) {
                    subBuilder.MergeFrom(Object);
                  }
                  input.ReadMessage(subBuilder, extensionRegistry);
                  Object = subBuilder.BuildPartial();
                  break;
                }
                case 16: {
                  result.hasQuantity = input.ReadUInt64(ref result.quantity_);
                  break;
                }
                case 26: {
                  global::atwork_pb_msgs.ObjectIdentifier.Builder subBuilder = global::atwork_pb_msgs.ObjectIdentifier.CreateBuilder();
                  if (result.hasContainer) {
                    subBuilder.MergeFrom(Container);
                  }
                  input.ReadMessage(subBuilder, extensionRegistry);
                  Container = subBuilder.BuildPartial();
                  break;
                }
                case 34: {
                  global::atwork_pb_msgs.LocationIdentifier.Builder subBuilder = global::atwork_pb_msgs.LocationIdentifier.CreateBuilder();
                  if (result.hasLocation) {
                    subBuilder.MergeFrom(Location);
                  }
                  input.ReadMessage(subBuilder, extensionRegistry);
                  Location = subBuilder.BuildPartial();
                  break;
                }
              }
            }
            
            if (unknownFields != null) {
              this.UnknownFields = unknownFields.Build();
            }
            return this;
          }
          
          
          public bool HasObject {
           get { return result.hasObject; }
          }
          public global::atwork_pb_msgs.ObjectIdentifier Object {
            get { return result.Object; }
            set { SetObject(value); }
          }
          public Builder SetObject(global::atwork_pb_msgs.ObjectIdentifier value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasObject = true;
            result.object_ = value;
            return this;
          }
          public Builder SetObject(global::atwork_pb_msgs.ObjectIdentifier.Builder builderForValue) {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.hasObject = true;
            result.object_ = builderForValue.Build();
            return this;
          }
          public Builder MergeObject(global::atwork_pb_msgs.ObjectIdentifier value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            if (result.hasObject &&
                result.object_ != global::atwork_pb_msgs.ObjectIdentifier.DefaultInstance) {
                result.object_ = global::atwork_pb_msgs.ObjectIdentifier.CreateBuilder(result.object_).MergeFrom(value).BuildPartial();
            } else {
              result.object_ = value;
            }
            result.hasObject = true;
            return this;
          }
          public Builder ClearObject() {
            PrepareBuilder();
            result.hasObject = false;
            result.object_ = null;
            return this;
          }
          
          public bool HasQuantity {
            get { return result.hasQuantity; }
          }
          [global::System.CLSCompliant(false)]
          public ulong Quantity {
            get { return result.Quantity; }
            set { SetQuantity(value); }
          }
          [global::System.CLSCompliant(false)]
          public Builder SetQuantity(ulong value) {
            PrepareBuilder();
            result.hasQuantity = true;
            result.quantity_ = value;
            return this;
          }
          public Builder ClearQuantity() {
            PrepareBuilder();
            result.hasQuantity = false;
            result.quantity_ = 0UL;
            return this;
          }
          
          public bool HasContainer {
           get { return result.hasContainer; }
          }
          public global::atwork_pb_msgs.ObjectIdentifier Container {
            get { return result.Container; }
            set { SetContainer(value); }
          }
          public Builder SetContainer(global::atwork_pb_msgs.ObjectIdentifier value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasContainer = true;
            result.container_ = value;
            return this;
          }
          public Builder SetContainer(global::atwork_pb_msgs.ObjectIdentifier.Builder builderForValue) {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.hasContainer = true;
            result.container_ = builderForValue.Build();
            return this;
          }
          public Builder MergeContainer(global::atwork_pb_msgs.ObjectIdentifier value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            if (result.hasContainer &&
                result.container_ != global::atwork_pb_msgs.ObjectIdentifier.DefaultInstance) {
                result.container_ = global::atwork_pb_msgs.ObjectIdentifier.CreateBuilder(result.container_).MergeFrom(value).BuildPartial();
            } else {
              result.container_ = value;
            }
            result.hasContainer = true;
            return this;
          }
          public Builder ClearContainer() {
            PrepareBuilder();
            result.hasContainer = false;
            result.container_ = null;
            return this;
          }
          
          public bool HasLocation {
           get { return result.hasLocation; }
          }
          public global::atwork_pb_msgs.LocationIdentifier Location {
            get { return result.Location; }
            set { SetLocation(value); }
          }
          public Builder SetLocation(global::atwork_pb_msgs.LocationIdentifier value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            result.hasLocation = true;
            result.location_ = value;
            return this;
          }
          public Builder SetLocation(global::atwork_pb_msgs.LocationIdentifier.Builder builderForValue) {
            pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
            PrepareBuilder();
            result.hasLocation = true;
            result.location_ = builderForValue.Build();
            return this;
          }
          public Builder MergeLocation(global::atwork_pb_msgs.LocationIdentifier value) {
            pb::ThrowHelper.ThrowIfNull(value, "value");
            PrepareBuilder();
            if (result.hasLocation &&
                result.location_ != global::atwork_pb_msgs.LocationIdentifier.DefaultInstance) {
                result.location_ = global::atwork_pb_msgs.LocationIdentifier.CreateBuilder(result.location_).MergeFrom(value).BuildPartial();
            } else {
              result.location_ = value;
            }
            result.hasLocation = true;
            return this;
          }
          public Builder ClearLocation() {
            PrepareBuilder();
            result.hasLocation = false;
            result.location_ = null;
            return this;
          }
        }
        static Item() {
          object.ReferenceEquals(global::atwork_pb_msgs.Proto.Inventory.Descriptor, null);
        }
      }
      
    }
    #endregion
    
    public const int ItemsFieldNumber = 1;
    private pbc::PopsicleList<global::atwork_pb_msgs.Inventory.Types.Item> items_ = new pbc::PopsicleList<global::atwork_pb_msgs.Inventory.Types.Item>();
    public scg::IList<global::atwork_pb_msgs.Inventory.Types.Item> ItemsList {
      get { return items_; }
    }
    public int ItemsCount {
      get { return items_.Count; }
    }
    public global::atwork_pb_msgs.Inventory.Types.Item GetItems(int index) {
      return items_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::atwork_pb_msgs.Inventory.Types.Item element in ItemsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _inventoryFieldNames;
      if (items_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], items_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::atwork_pb_msgs.Inventory.Types.Item element in ItemsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Inventory ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Inventory ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Inventory ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Inventory ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Inventory ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Inventory ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Inventory ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Inventory ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Inventory ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Inventory ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Inventory MakeReadOnly() {
      items_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Inventory prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Inventory, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Inventory cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Inventory result;
      
      private Inventory PrepareBuilder() {
        if (resultIsReadOnly) {
          Inventory original = result;
          result = new Inventory();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Inventory MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::atwork_pb_msgs.Inventory.Descriptor; }
      }
      
      public override Inventory DefaultInstanceForType {
        get { return global::atwork_pb_msgs.Inventory.DefaultInstance; }
      }
      
      public override Inventory BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Inventory) {
          return MergeFrom((Inventory) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Inventory other) {
        if (other == global::atwork_pb_msgs.Inventory.DefaultInstance) return this;
        PrepareBuilder();
        if (other.items_.Count != 0) {
          result.items_.Add(other.items_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_inventoryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _inventoryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.items_, global::atwork_pb_msgs.Inventory.Types.Item.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::atwork_pb_msgs.Inventory.Types.Item> ItemsList {
        get { return PrepareBuilder().items_; }
      }
      public int ItemsCount {
        get { return result.ItemsCount; }
      }
      public global::atwork_pb_msgs.Inventory.Types.Item GetItems(int index) {
        return result.GetItems(index);
      }
      public Builder SetItems(int index, global::atwork_pb_msgs.Inventory.Types.Item value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.items_[index] = value;
        return this;
      }
      public Builder SetItems(int index, global::atwork_pb_msgs.Inventory.Types.Item.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.items_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddItems(global::atwork_pb_msgs.Inventory.Types.Item value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.items_.Add(value);
        return this;
      }
      public Builder AddItems(global::atwork_pb_msgs.Inventory.Types.Item.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.items_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeItems(scg::IEnumerable<global::atwork_pb_msgs.Inventory.Types.Item> values) {
        PrepareBuilder();
        result.items_.Add(values);
        return this;
      }
      public Builder ClearItems() {
        PrepareBuilder();
        result.items_.Clear();
        return this;
      }
    }
    static Inventory() {
      object.ReferenceEquals(global::atwork_pb_msgs.Proto.Inventory.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Transaction : pb::GeneratedMessage<Transaction, Transaction.Builder> {
    private Transaction() { }
    private static readonly Transaction defaultInstance = new Transaction().MakeReadOnly();
    private static readonly string[] _transactionFieldNames = new string[] { "action", "destination", "object", "order_id", "quantity", "source", "transaction_id" };
    private static readonly uint[] _transactionFieldTags = new uint[] { 40, 58, 26, 16, 32, 50, 8 };
    public static Transaction DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Transaction DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Transaction ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::atwork_pb_msgs.Proto.Inventory.internal__static_atwork_pb_msgs_Transaction__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Transaction, Transaction.Builder> InternalFieldAccessors {
      get { return global::atwork_pb_msgs.Proto.Inventory.internal__static_atwork_pb_msgs_Transaction__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Action {
        INSERT = 1,
        REMOVE = 2,
        MOVE = 3,
      }
      
    }
    #endregion
    
    public const int TransactionIdFieldNumber = 1;
    private bool hasTransactionId;
    private ulong transactionId_;
    public bool HasTransactionId {
      get { return hasTransactionId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong TransactionId {
      get { return transactionId_; }
    }
    
    public const int OrderIdFieldNumber = 2;
    private bool hasOrderId;
    private ulong orderId_;
    public bool HasOrderId {
      get { return hasOrderId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong OrderId {
      get { return orderId_; }
    }
    
    public const int ObjectFieldNumber = 3;
    private bool hasObject;
    private global::atwork_pb_msgs.ObjectIdentifier object_;
    public bool HasObject {
      get { return hasObject; }
    }
    public global::atwork_pb_msgs.ObjectIdentifier Object {
      get { return object_ ?? global::atwork_pb_msgs.ObjectIdentifier.DefaultInstance; }
    }
    
    public const int QuantityFieldNumber = 4;
    private bool hasQuantity;
    private uint quantity_;
    public bool HasQuantity {
      get { return hasQuantity; }
    }
    [global::System.CLSCompliant(false)]
    public uint Quantity {
      get { return quantity_; }
    }
    
    public const int ActionFieldNumber = 5;
    private bool hasAction;
    private global::atwork_pb_msgs.Transaction.Types.Action action_ = global::atwork_pb_msgs.Transaction.Types.Action.INSERT;
    public bool HasAction {
      get { return hasAction; }
    }
    public global::atwork_pb_msgs.Transaction.Types.Action Action {
      get { return action_; }
    }
    
    public const int SourceFieldNumber = 6;
    private bool hasSource;
    private global::atwork_pb_msgs.LocationIdentifier source_;
    public bool HasSource {
      get { return hasSource; }
    }
    public global::atwork_pb_msgs.LocationIdentifier Source {
      get { return source_ ?? global::atwork_pb_msgs.LocationIdentifier.DefaultInstance; }
    }
    
    public const int DestinationFieldNumber = 7;
    private bool hasDestination;
    private global::atwork_pb_msgs.LocationIdentifier destination_;
    public bool HasDestination {
      get { return hasDestination; }
    }
    public global::atwork_pb_msgs.LocationIdentifier Destination {
      get { return destination_ ?? global::atwork_pb_msgs.LocationIdentifier.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasTransactionId) return false;
        if (!hasOrderId) return false;
        if (!hasObject) return false;
        if (!hasAction) return false;
        if (!Object.IsInitialized) return false;
        if (HasSource) {
          if (!Source.IsInitialized) return false;
        }
        if (HasDestination) {
          if (!Destination.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _transactionFieldNames;
      if (hasTransactionId) {
        output.WriteUInt64(1, field_names[6], TransactionId);
      }
      if (hasOrderId) {
        output.WriteUInt64(2, field_names[3], OrderId);
      }
      if (hasObject) {
        output.WriteMessage(3, field_names[2], Object);
      }
      if (hasQuantity) {
        output.WriteUInt32(4, field_names[4], Quantity);
      }
      if (hasAction) {
        output.WriteEnum(5, field_names[0], (int) Action, Action);
      }
      if (hasSource) {
        output.WriteMessage(6, field_names[5], Source);
      }
      if (hasDestination) {
        output.WriteMessage(7, field_names[1], Destination);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTransactionId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, TransactionId);
      }
      if (hasOrderId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, OrderId);
      }
      if (hasObject) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Object);
      }
      if (hasQuantity) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, Quantity);
      }
      if (hasAction) {
        size += pb::CodedOutputStream.ComputeEnumSize(5, (int) Action);
      }
      if (hasSource) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, Source);
      }
      if (hasDestination) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, Destination);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Transaction ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Transaction ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Transaction ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Transaction ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Transaction ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Transaction ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Transaction ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Transaction ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Transaction ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Transaction ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Transaction MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Transaction prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Transaction, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Transaction cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Transaction result;
      
      private Transaction PrepareBuilder() {
        if (resultIsReadOnly) {
          Transaction original = result;
          result = new Transaction();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Transaction MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::atwork_pb_msgs.Transaction.Descriptor; }
      }
      
      public override Transaction DefaultInstanceForType {
        get { return global::atwork_pb_msgs.Transaction.DefaultInstance; }
      }
      
      public override Transaction BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Transaction) {
          return MergeFrom((Transaction) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Transaction other) {
        if (other == global::atwork_pb_msgs.Transaction.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTransactionId) {
          TransactionId = other.TransactionId;
        }
        if (other.HasOrderId) {
          OrderId = other.OrderId;
        }
        if (other.HasObject) {
          MergeObject(other.Object);
        }
        if (other.HasQuantity) {
          Quantity = other.Quantity;
        }
        if (other.HasAction) {
          Action = other.Action;
        }
        if (other.HasSource) {
          MergeSource(other.Source);
        }
        if (other.HasDestination) {
          MergeDestination(other.Destination);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_transactionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _transactionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTransactionId = input.ReadUInt64(ref result.transactionId_);
              break;
            }
            case 16: {
              result.hasOrderId = input.ReadUInt64(ref result.orderId_);
              break;
            }
            case 26: {
              global::atwork_pb_msgs.ObjectIdentifier.Builder subBuilder = global::atwork_pb_msgs.ObjectIdentifier.CreateBuilder();
              if (result.hasObject) {
                subBuilder.MergeFrom(Object);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Object = subBuilder.BuildPartial();
              break;
            }
            case 32: {
              result.hasQuantity = input.ReadUInt32(ref result.quantity_);
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.action_, out unknown)) {
                result.hasAction = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
            case 50: {
              global::atwork_pb_msgs.LocationIdentifier.Builder subBuilder = global::atwork_pb_msgs.LocationIdentifier.CreateBuilder();
              if (result.hasSource) {
                subBuilder.MergeFrom(Source);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Source = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              global::atwork_pb_msgs.LocationIdentifier.Builder subBuilder = global::atwork_pb_msgs.LocationIdentifier.CreateBuilder();
              if (result.hasDestination) {
                subBuilder.MergeFrom(Destination);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Destination = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTransactionId {
        get { return result.hasTransactionId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong TransactionId {
        get { return result.TransactionId; }
        set { SetTransactionId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTransactionId(ulong value) {
        PrepareBuilder();
        result.hasTransactionId = true;
        result.transactionId_ = value;
        return this;
      }
      public Builder ClearTransactionId() {
        PrepareBuilder();
        result.hasTransactionId = false;
        result.transactionId_ = 0UL;
        return this;
      }
      
      public bool HasOrderId {
        get { return result.hasOrderId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong OrderId {
        get { return result.OrderId; }
        set { SetOrderId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetOrderId(ulong value) {
        PrepareBuilder();
        result.hasOrderId = true;
        result.orderId_ = value;
        return this;
      }
      public Builder ClearOrderId() {
        PrepareBuilder();
        result.hasOrderId = false;
        result.orderId_ = 0UL;
        return this;
      }
      
      public bool HasObject {
       get { return result.hasObject; }
      }
      public global::atwork_pb_msgs.ObjectIdentifier Object {
        get { return result.Object; }
        set { SetObject(value); }
      }
      public Builder SetObject(global::atwork_pb_msgs.ObjectIdentifier value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasObject = true;
        result.object_ = value;
        return this;
      }
      public Builder SetObject(global::atwork_pb_msgs.ObjectIdentifier.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasObject = true;
        result.object_ = builderForValue.Build();
        return this;
      }
      public Builder MergeObject(global::atwork_pb_msgs.ObjectIdentifier value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasObject &&
            result.object_ != global::atwork_pb_msgs.ObjectIdentifier.DefaultInstance) {
            result.object_ = global::atwork_pb_msgs.ObjectIdentifier.CreateBuilder(result.object_).MergeFrom(value).BuildPartial();
        } else {
          result.object_ = value;
        }
        result.hasObject = true;
        return this;
      }
      public Builder ClearObject() {
        PrepareBuilder();
        result.hasObject = false;
        result.object_ = null;
        return this;
      }
      
      public bool HasQuantity {
        get { return result.hasQuantity; }
      }
      [global::System.CLSCompliant(false)]
      public uint Quantity {
        get { return result.Quantity; }
        set { SetQuantity(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetQuantity(uint value) {
        PrepareBuilder();
        result.hasQuantity = true;
        result.quantity_ = value;
        return this;
      }
      public Builder ClearQuantity() {
        PrepareBuilder();
        result.hasQuantity = false;
        result.quantity_ = 0;
        return this;
      }
      
      public bool HasAction {
       get { return result.hasAction; }
      }
      public global::atwork_pb_msgs.Transaction.Types.Action Action {
        get { return result.Action; }
        set { SetAction(value); }
      }
      public Builder SetAction(global::atwork_pb_msgs.Transaction.Types.Action value) {
        PrepareBuilder();
        result.hasAction = true;
        result.action_ = value;
        return this;
      }
      public Builder ClearAction() {
        PrepareBuilder();
        result.hasAction = false;
        result.action_ = global::atwork_pb_msgs.Transaction.Types.Action.INSERT;
        return this;
      }
      
      public bool HasSource {
       get { return result.hasSource; }
      }
      public global::atwork_pb_msgs.LocationIdentifier Source {
        get { return result.Source; }
        set { SetSource(value); }
      }
      public Builder SetSource(global::atwork_pb_msgs.LocationIdentifier value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSource = true;
        result.source_ = value;
        return this;
      }
      public Builder SetSource(global::atwork_pb_msgs.LocationIdentifier.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasSource = true;
        result.source_ = builderForValue.Build();
        return this;
      }
      public Builder MergeSource(global::atwork_pb_msgs.LocationIdentifier value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasSource &&
            result.source_ != global::atwork_pb_msgs.LocationIdentifier.DefaultInstance) {
            result.source_ = global::atwork_pb_msgs.LocationIdentifier.CreateBuilder(result.source_).MergeFrom(value).BuildPartial();
        } else {
          result.source_ = value;
        }
        result.hasSource = true;
        return this;
      }
      public Builder ClearSource() {
        PrepareBuilder();
        result.hasSource = false;
        result.source_ = null;
        return this;
      }
      
      public bool HasDestination {
       get { return result.hasDestination; }
      }
      public global::atwork_pb_msgs.LocationIdentifier Destination {
        get { return result.Destination; }
        set { SetDestination(value); }
      }
      public Builder SetDestination(global::atwork_pb_msgs.LocationIdentifier value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDestination = true;
        result.destination_ = value;
        return this;
      }
      public Builder SetDestination(global::atwork_pb_msgs.LocationIdentifier.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasDestination = true;
        result.destination_ = builderForValue.Build();
        return this;
      }
      public Builder MergeDestination(global::atwork_pb_msgs.LocationIdentifier value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasDestination &&
            result.destination_ != global::atwork_pb_msgs.LocationIdentifier.DefaultInstance) {
            result.destination_ = global::atwork_pb_msgs.LocationIdentifier.CreateBuilder(result.destination_).MergeFrom(value).BuildPartial();
        } else {
          result.destination_ = value;
        }
        result.hasDestination = true;
        return this;
      }
      public Builder ClearDestination() {
        PrepareBuilder();
        result.hasDestination = false;
        result.destination_ = null;
        return this;
      }
    }
    static Transaction() {
      object.ReferenceEquals(global::atwork_pb_msgs.Proto.Inventory.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TransactionLog : pb::GeneratedMessage<TransactionLog, TransactionLog.Builder> {
    private TransactionLog() { }
    private static readonly TransactionLog defaultInstance = new TransactionLog().MakeReadOnly();
    private static readonly string[] _transactionLogFieldNames = new string[] { "transactions" };
    private static readonly uint[] _transactionLogFieldTags = new uint[] { 10 };
    public static TransactionLog DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TransactionLog DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TransactionLog ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::atwork_pb_msgs.Proto.Inventory.internal__static_atwork_pb_msgs_TransactionLog__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TransactionLog, TransactionLog.Builder> InternalFieldAccessors {
      get { return global::atwork_pb_msgs.Proto.Inventory.internal__static_atwork_pb_msgs_TransactionLog__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum CompType {
        COMP_ID = 2000,
        MSG_TYPE = 201,
      }
      
    }
    #endregion
    
    public const int TransactionsFieldNumber = 1;
    private pbc::PopsicleList<global::atwork_pb_msgs.Transaction> transactions_ = new pbc::PopsicleList<global::atwork_pb_msgs.Transaction>();
    public scg::IList<global::atwork_pb_msgs.Transaction> TransactionsList {
      get { return transactions_; }
    }
    public int TransactionsCount {
      get { return transactions_.Count; }
    }
    public global::atwork_pb_msgs.Transaction GetTransactions(int index) {
      return transactions_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::atwork_pb_msgs.Transaction element in TransactionsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _transactionLogFieldNames;
      if (transactions_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], transactions_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::atwork_pb_msgs.Transaction element in TransactionsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TransactionLog ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TransactionLog ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TransactionLog ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TransactionLog ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TransactionLog ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TransactionLog ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TransactionLog ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TransactionLog ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TransactionLog ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TransactionLog ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TransactionLog MakeReadOnly() {
      transactions_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TransactionLog prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TransactionLog, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TransactionLog cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TransactionLog result;
      
      private TransactionLog PrepareBuilder() {
        if (resultIsReadOnly) {
          TransactionLog original = result;
          result = new TransactionLog();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TransactionLog MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::atwork_pb_msgs.TransactionLog.Descriptor; }
      }
      
      public override TransactionLog DefaultInstanceForType {
        get { return global::atwork_pb_msgs.TransactionLog.DefaultInstance; }
      }
      
      public override TransactionLog BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TransactionLog) {
          return MergeFrom((TransactionLog) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TransactionLog other) {
        if (other == global::atwork_pb_msgs.TransactionLog.DefaultInstance) return this;
        PrepareBuilder();
        if (other.transactions_.Count != 0) {
          result.transactions_.Add(other.transactions_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_transactionLogFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _transactionLogFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.transactions_, global::atwork_pb_msgs.Transaction.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::atwork_pb_msgs.Transaction> TransactionsList {
        get { return PrepareBuilder().transactions_; }
      }
      public int TransactionsCount {
        get { return result.TransactionsCount; }
      }
      public global::atwork_pb_msgs.Transaction GetTransactions(int index) {
        return result.GetTransactions(index);
      }
      public Builder SetTransactions(int index, global::atwork_pb_msgs.Transaction value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.transactions_[index] = value;
        return this;
      }
      public Builder SetTransactions(int index, global::atwork_pb_msgs.Transaction.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.transactions_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTransactions(global::atwork_pb_msgs.Transaction value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.transactions_.Add(value);
        return this;
      }
      public Builder AddTransactions(global::atwork_pb_msgs.Transaction.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.transactions_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTransactions(scg::IEnumerable<global::atwork_pb_msgs.Transaction> values) {
        PrepareBuilder();
        result.transactions_.Add(values);
        return this;
      }
      public Builder ClearTransactions() {
        PrepareBuilder();
        result.transactions_.Clear();
        return this;
      }
    }
    static TransactionLog() {
      object.ReferenceEquals(global::atwork_pb_msgs.Proto.Inventory.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
