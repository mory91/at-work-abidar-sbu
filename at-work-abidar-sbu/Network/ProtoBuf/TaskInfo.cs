// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace atwork_pb_msgs {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class TaskInfo {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_atwork_pb_msgs_Task__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.Task, global::atwork_pb_msgs.Task.Builder> internal__static_atwork_pb_msgs_Task__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_atwork_pb_msgs_TaskInfo__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.TaskInfo, global::atwork_pb_msgs.TaskInfo.Builder> internal__static_atwork_pb_msgs_TaskInfo__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static TaskInfo() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            string.Concat(
              "Cg5UYXNrSW5mby5wcm90bxIOYXR3b3JrX3BiX21zZ3MaD0ludmVudG9yeS5w", 
              "cm90bxoKVGltZS5wcm90bxoUTmF2aWdhdGlvblRhc2sucHJvdG8aGFRyYW5z", 
              "cG9ydGF0aW9uVGFzay5wcm90byL/AgoEVGFzaxIKCgJpZBgBIAIoBBIrCgR0", 
              "eXBlGAIgAigOMh0uYXR3b3JrX3BiX21zZ3MuVGFzay5UYXNrVHlwZRIrCgZz", 
              "dGF0dXMYAyACKA4yGy5hdHdvcmtfcGJfbXNncy5UYXNrLlN0YXR1cxI/ChN0", 
              "cmFuc3BvcnRhdGlvbl90YXNrGAQgASgLMiIuYXR3b3JrX3BiX21zZ3MuVHJh", 
              "bnNwb3J0YXRpb25UYXNrEjcKD25hdmlnYXRpb25fdGFzaxgFIAEoCzIeLmF0", 
              "d29ya19wYl9tc2dzLk5hdmlnYXRpb25UYXNrIloKBlN0YXR1cxILCgdPRkZF", 
              "UkVEEAESCwoHVElNRU9VVBACEg8KC0lOX1BST0dSRVNTEAMSCgoGUEFVU0VE", 
              "EAQSCwoHQUJPUlRFRBAFEgwKCEZJTklTSEVEEAYiOwoIVGFza1R5cGUSCwoH", 
              "VU5LTk9XThAAEhIKDlRSQU5TUE9SVEFUSU9OEAESDgoKTkFWSUdBVElPThAC", 
              "IlgKCFRhc2tJbmZvEiMKBXRhc2tzGAEgAygLMhQuYXR3b3JrX3BiX21zZ3Mu", 
              "VGFzayInCghDb21wVHlwZRIMCgdDT01QX0lEENAPEg0KCE1TR19UWVBFELYC", 
            "QigKFm9yZy5hdHdvcmsuY29tbW9uX21zZ3NCDlRhc2tJbmZvUHJvdG9z"));
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_atwork_pb_msgs_Task__Descriptor = Descriptor.MessageTypes[0];
          internal__static_atwork_pb_msgs_Task__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.Task, global::atwork_pb_msgs.Task.Builder>(internal__static_atwork_pb_msgs_Task__Descriptor,
                  new string[] { "Id", "Type", "Status", "TransportationTask", "NavigationTask", });
          internal__static_atwork_pb_msgs_TaskInfo__Descriptor = Descriptor.MessageTypes[1];
          internal__static_atwork_pb_msgs_TaskInfo__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.TaskInfo, global::atwork_pb_msgs.TaskInfo.Builder>(internal__static_atwork_pb_msgs_TaskInfo__Descriptor,
                  new string[] { "Tasks", });
          return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::atwork_pb_msgs.Proto.Inventory.Descriptor, 
            global::atwork_pb_msgs.Proto.Time.Descriptor, 
            global::atwork_pb_msgs.Proto.NavigationTask.Descriptor, 
            global::atwork_pb_msgs.Proto.TransportationTask.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Task : pb::GeneratedMessage<Task, Task.Builder> {
    private Task() { }
    private static readonly Task defaultInstance = new Task().MakeReadOnly();
    private static readonly string[] _taskFieldNames = new string[] { "id", "navigation_task", "status", "transportation_task", "type" };
    private static readonly uint[] _taskFieldTags = new uint[] { 8, 42, 24, 34, 16 };
    public static Task DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override Task DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override Task ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::atwork_pb_msgs.Proto.TaskInfo.internal__static_atwork_pb_msgs_Task__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<Task, Task.Builder> InternalFieldAccessors {
      get { return global::atwork_pb_msgs.Proto.TaskInfo.internal__static_atwork_pb_msgs_Task__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Status {
        OFFERED = 1,
        TIMEOUT = 2,
        IN_PROGRESS = 3,
        PAUSED = 4,
        ABORTED = 5,
        FINISHED = 6,
      }
      
      public enum TaskType {
        UNKNOWN = 0,
        TRANSPORTATION = 1,
        NAVIGATION = 2,
      }
      
    }
    #endregion
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private ulong id_;
    public bool HasId {
      get { return hasId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Id {
      get { return id_; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::atwork_pb_msgs.Task.Types.TaskType type_ = global::atwork_pb_msgs.Task.Types.TaskType.UNKNOWN;
    public bool HasType {
      get { return hasType; }
    }
    public global::atwork_pb_msgs.Task.Types.TaskType Type {
      get { return type_; }
    }
    
    public const int StatusFieldNumber = 3;
    private bool hasStatus;
    private global::atwork_pb_msgs.Task.Types.Status status_ = global::atwork_pb_msgs.Task.Types.Status.OFFERED;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public global::atwork_pb_msgs.Task.Types.Status Status {
      get { return status_; }
    }
    
    public const int TransportationTaskFieldNumber = 4;
    private bool hasTransportationTask;
    private global::atwork_pb_msgs.TransportationTask transportationTask_;
    public bool HasTransportationTask {
      get { return hasTransportationTask; }
    }
    public global::atwork_pb_msgs.TransportationTask TransportationTask {
      get { return transportationTask_ ?? global::atwork_pb_msgs.TransportationTask.DefaultInstance; }
    }
    
    public const int NavigationTaskFieldNumber = 5;
    private bool hasNavigationTask;
    private global::atwork_pb_msgs.NavigationTask navigationTask_;
    public bool HasNavigationTask {
      get { return hasNavigationTask; }
    }
    public global::atwork_pb_msgs.NavigationTask NavigationTask {
      get { return navigationTask_ ?? global::atwork_pb_msgs.NavigationTask.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasType) return false;
        if (!hasStatus) return false;
        if (HasTransportationTask) {
          if (!TransportationTask.IsInitialized) return false;
        }
        if (HasNavigationTask) {
          if (!NavigationTask.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _taskFieldNames;
      if (hasId) {
        output.WriteUInt64(1, field_names[0], Id);
      }
      if (hasType) {
        output.WriteEnum(2, field_names[4], (int) Type, Type);
      }
      if (hasStatus) {
        output.WriteEnum(3, field_names[2], (int) Status, Status);
      }
      if (hasTransportationTask) {
        output.WriteMessage(4, field_names[3], TransportationTask);
      }
      if (hasNavigationTask) {
        output.WriteMessage(5, field_names[1], NavigationTask);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasId) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, Id);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Type);
      }
      if (hasStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Status);
      }
      if (hasTransportationTask) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, TransportationTask);
      }
      if (hasNavigationTask) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, NavigationTask);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static Task ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Task ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Task ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static Task ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static Task ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Task ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Task ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static Task ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static Task ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static Task ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private Task MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(Task prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<Task, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(Task cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private Task result;
      
      private Task PrepareBuilder() {
        if (resultIsReadOnly) {
          Task original = result;
          result = new Task();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override Task MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::atwork_pb_msgs.Task.Descriptor; }
      }
      
      public override Task DefaultInstanceForType {
        get { return global::atwork_pb_msgs.Task.DefaultInstance; }
      }
      
      public override Task BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is Task) {
          return MergeFrom((Task) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(Task other) {
        if (other == global::atwork_pb_msgs.Task.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasTransportationTask) {
          MergeTransportationTask(other.TransportationTask);
        }
        if (other.HasNavigationTask) {
          MergeNavigationTask(other.NavigationTask);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_taskFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _taskFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadUInt64(ref result.id_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.status_, out unknown)) {
                result.hasStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 34: {
              global::atwork_pb_msgs.TransportationTask.Builder subBuilder = global::atwork_pb_msgs.TransportationTask.CreateBuilder();
              if (result.hasTransportationTask) {
                subBuilder.MergeFrom(TransportationTask);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              TransportationTask = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              global::atwork_pb_msgs.NavigationTask.Builder subBuilder = global::atwork_pb_msgs.NavigationTask.CreateBuilder();
              if (result.hasNavigationTask) {
                subBuilder.MergeFrom(NavigationTask);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              NavigationTask = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      [global::System.CLSCompliant(false)]
      public ulong Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetId(ulong value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0UL;
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::atwork_pb_msgs.Task.Types.TaskType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::atwork_pb_msgs.Task.Types.TaskType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::atwork_pb_msgs.Task.Types.TaskType.UNKNOWN;
        return this;
      }
      
      public bool HasStatus {
       get { return result.hasStatus; }
      }
      public global::atwork_pb_msgs.Task.Types.Status Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(global::atwork_pb_msgs.Task.Types.Status value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = global::atwork_pb_msgs.Task.Types.Status.OFFERED;
        return this;
      }
      
      public bool HasTransportationTask {
       get { return result.hasTransportationTask; }
      }
      public global::atwork_pb_msgs.TransportationTask TransportationTask {
        get { return result.TransportationTask; }
        set { SetTransportationTask(value); }
      }
      public Builder SetTransportationTask(global::atwork_pb_msgs.TransportationTask value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTransportationTask = true;
        result.transportationTask_ = value;
        return this;
      }
      public Builder SetTransportationTask(global::atwork_pb_msgs.TransportationTask.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasTransportationTask = true;
        result.transportationTask_ = builderForValue.Build();
        return this;
      }
      public Builder MergeTransportationTask(global::atwork_pb_msgs.TransportationTask value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasTransportationTask &&
            result.transportationTask_ != global::atwork_pb_msgs.TransportationTask.DefaultInstance) {
            result.transportationTask_ = global::atwork_pb_msgs.TransportationTask.CreateBuilder(result.transportationTask_).MergeFrom(value).BuildPartial();
        } else {
          result.transportationTask_ = value;
        }
        result.hasTransportationTask = true;
        return this;
      }
      public Builder ClearTransportationTask() {
        PrepareBuilder();
        result.hasTransportationTask = false;
        result.transportationTask_ = null;
        return this;
      }
      
      public bool HasNavigationTask {
       get { return result.hasNavigationTask; }
      }
      public global::atwork_pb_msgs.NavigationTask NavigationTask {
        get { return result.NavigationTask; }
        set { SetNavigationTask(value); }
      }
      public Builder SetNavigationTask(global::atwork_pb_msgs.NavigationTask value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNavigationTask = true;
        result.navigationTask_ = value;
        return this;
      }
      public Builder SetNavigationTask(global::atwork_pb_msgs.NavigationTask.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasNavigationTask = true;
        result.navigationTask_ = builderForValue.Build();
        return this;
      }
      public Builder MergeNavigationTask(global::atwork_pb_msgs.NavigationTask value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasNavigationTask &&
            result.navigationTask_ != global::atwork_pb_msgs.NavigationTask.DefaultInstance) {
            result.navigationTask_ = global::atwork_pb_msgs.NavigationTask.CreateBuilder(result.navigationTask_).MergeFrom(value).BuildPartial();
        } else {
          result.navigationTask_ = value;
        }
        result.hasNavigationTask = true;
        return this;
      }
      public Builder ClearNavigationTask() {
        PrepareBuilder();
        result.hasNavigationTask = false;
        result.navigationTask_ = null;
        return this;
      }
    }
    static Task() {
      object.ReferenceEquals(global::atwork_pb_msgs.Proto.TaskInfo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class TaskInfo : pb::GeneratedMessage<TaskInfo, TaskInfo.Builder> {
    private TaskInfo() { }
    private static readonly TaskInfo defaultInstance = new TaskInfo().MakeReadOnly();
    private static readonly string[] _taskInfoFieldNames = new string[] { "tasks" };
    private static readonly uint[] _taskInfoFieldTags = new uint[] { 10 };
    public static TaskInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override TaskInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override TaskInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::atwork_pb_msgs.Proto.TaskInfo.internal__static_atwork_pb_msgs_TaskInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<TaskInfo, TaskInfo.Builder> InternalFieldAccessors {
      get { return global::atwork_pb_msgs.Proto.TaskInfo.internal__static_atwork_pb_msgs_TaskInfo__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum CompType {
        COMP_ID = 2000,
        MSG_TYPE = 310,
      }
      
    }
    #endregion
    
    public const int TasksFieldNumber = 1;
    private pbc::PopsicleList<global::atwork_pb_msgs.Task> tasks_ = new pbc::PopsicleList<global::atwork_pb_msgs.Task>();
    public scg::IList<global::atwork_pb_msgs.Task> TasksList {
      get { return tasks_; }
    }
    public int TasksCount {
      get { return tasks_.Count; }
    }
    public global::atwork_pb_msgs.Task GetTasks(int index) {
      return tasks_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::atwork_pb_msgs.Task element in TasksList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _taskInfoFieldNames;
      if (tasks_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], tasks_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      foreach (global::atwork_pb_msgs.Task element in TasksList) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static TaskInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TaskInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TaskInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static TaskInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static TaskInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TaskInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static TaskInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static TaskInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static TaskInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static TaskInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private TaskInfo MakeReadOnly() {
      tasks_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(TaskInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<TaskInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(TaskInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private TaskInfo result;
      
      private TaskInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          TaskInfo original = result;
          result = new TaskInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override TaskInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::atwork_pb_msgs.TaskInfo.Descriptor; }
      }
      
      public override TaskInfo DefaultInstanceForType {
        get { return global::atwork_pb_msgs.TaskInfo.DefaultInstance; }
      }
      
      public override TaskInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is TaskInfo) {
          return MergeFrom((TaskInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(TaskInfo other) {
        if (other == global::atwork_pb_msgs.TaskInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.tasks_.Count != 0) {
          result.tasks_.Add(other.tasks_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_taskInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _taskInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.tasks_, global::atwork_pb_msgs.Task.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::atwork_pb_msgs.Task> TasksList {
        get { return PrepareBuilder().tasks_; }
      }
      public int TasksCount {
        get { return result.TasksCount; }
      }
      public global::atwork_pb_msgs.Task GetTasks(int index) {
        return result.GetTasks(index);
      }
      public Builder SetTasks(int index, global::atwork_pb_msgs.Task value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tasks_[index] = value;
        return this;
      }
      public Builder SetTasks(int index, global::atwork_pb_msgs.Task.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tasks_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTasks(global::atwork_pb_msgs.Task value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.tasks_.Add(value);
        return this;
      }
      public Builder AddTasks(global::atwork_pb_msgs.Task.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.tasks_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTasks(scg::IEnumerable<global::atwork_pb_msgs.Task> values) {
        PrepareBuilder();
        result.tasks_.Add(values);
        return this;
      }
      public Builder ClearTasks() {
        PrepareBuilder();
        result.tasks_.Clear();
        return this;
      }
    }
    static TaskInfo() {
      object.ReferenceEquals(global::atwork_pb_msgs.Proto.TaskInfo.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
