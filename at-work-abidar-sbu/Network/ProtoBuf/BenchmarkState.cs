// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021,2237
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace atwork_pb_msgs {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class BenchmarkState {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_atwork_pb_msgs_BenchmarkScenario__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.BenchmarkScenario, global::atwork_pb_msgs.BenchmarkScenario.Builder> internal__static_atwork_pb_msgs_BenchmarkScenario__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_atwork_pb_msgs_BenchmarkState__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.BenchmarkState, global::atwork_pb_msgs.BenchmarkState.Builder> internal__static_atwork_pb_msgs_BenchmarkState__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_atwork_pb_msgs_SetBenchmarkState__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.SetBenchmarkState, global::atwork_pb_msgs.SetBenchmarkState.Builder> internal__static_atwork_pb_msgs_SetBenchmarkState__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_atwork_pb_msgs_SetBenchmarkScenario__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.SetBenchmarkScenario, global::atwork_pb_msgs.SetBenchmarkScenario.Builder> internal__static_atwork_pb_msgs_SetBenchmarkScenario__FieldAccessorTable;
      internal static pbd::MessageDescriptor internal__static_atwork_pb_msgs_SetBenchmarkTransitionEvent__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.SetBenchmarkTransitionEvent, global::atwork_pb_msgs.SetBenchmarkTransitionEvent.Builder> internal__static_atwork_pb_msgs_SetBenchmarkTransitionEvent__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static BenchmarkState() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            string.Concat(
              "ChRCZW5jaG1hcmtTdGF0ZS5wcm90bxIOYXR3b3JrX3BiX21zZ3MaClRpbWUu", 
              "cHJvdG8i0gEKEUJlbmNobWFya1NjZW5hcmlvEj0KBHR5cGUYASACKA4yLy5h", 
              "dHdvcmtfcGJfbXNncy5CZW5jaG1hcmtTY2VuYXJpby5CZW5jaG1hcmtUeXBl", 
              "Eg8KB3R5cGVfaWQYAiACKA0SEwoLZGVzY3JpcHRpb24YAyABKAkiWAoNQmVu", 
              "Y2htYXJrVHlwZRIICgROT05FEAASBwoDQk5UEAESBwoDQk1UEAISBwoDQlRU", 
              "EAMSBwoDUFBUEAQSBwoDQ0JUEAUSBwoDQVdGEAYSBwoDSVJMEAciqgMKDkJl", 
              "bmNobWFya1N0YXRlEiwKDmJlbmNobWFya190aW1lGAEgAigLMhQuYXR3b3Jr", 
              "X3BiX21zZ3MuVGltZRIzCgVzdGF0ZRgDIAIoDjIkLmF0d29ya19wYl9tc2dz", 
              "LkJlbmNobWFya1N0YXRlLlN0YXRlEjMKBXBoYXNlGAkgAigOMiQuYXR3b3Jr", 
              "X3BiX21zZ3MuQmVuY2htYXJrU3RhdGUuUGhhc2USMwoIc2NlbmFyaW8YBCAC", 
              "KAsyIS5hdHdvcmtfcGJfbXNncy5CZW5jaG1hcmtTY2VuYXJpbxITCgtrbm93", 
              "bl90ZWFtcxgFIAMoCRIXCg9jb25uZWN0ZWRfdGVhbXMYBiADKAkiJgoIQ29t", 
              "cFR5cGUSDAoHQ09NUF9JRBDQDxIMCghNU0dfVFlQRRBkIjsKBVN0YXRlEgsK", 
              "B1JVTk5JTkcQARIKCgZQQVVTRUQQAhIMCghGSU5JU0hFRBADEgsKB1NUT1BQ", 
              "RUQQBCI4CgVQaGFzZRINCglFWEVDVVRJT04QABIPCgtDQUxJQlJBVElPThAB", 
              "Eg8KC1BSRVBBUkFUSU9OEAIicAoRU2V0QmVuY2htYXJrU3RhdGUSMwoFc3Rh", 
              "dGUYASACKA4yJC5hdHdvcmtfcGJfbXNncy5CZW5jaG1hcmtTdGF0ZS5TdGF0", 
              "ZSImCghDb21wVHlwZRIMCgdDT01QX0lEENAPEgwKCE1TR19UWVBFEGUicwoU", 
              "U2V0QmVuY2htYXJrU2NlbmFyaW8SMwoIc2NlbmFyaW8YASACKAsyIS5hdHdv", 
              "cmtfcGJfbXNncy5CZW5jaG1hcmtTY2VuYXJpbyImCghDb21wVHlwZRIMCgdD", 
              "T01QX0lEENAPEgwKCE1TR19UWVBFEGYi0gEKG1NldEJlbmNobWFya1RyYW5z", 
              "aXRpb25FdmVudBJACgVldmVudBgBIAIoDjIxLmF0d29ya19wYl9tc2dzLlNl", 
              "dEJlbmNobWFya1RyYW5zaXRpb25FdmVudC5FdmVudCImCghDb21wVHlwZRIM", 
              "CgdDT01QX0lEENAPEgwKCE1TR19UWVBFEGciSQoFRXZlbnQSCQoFUkVTRVQQ", 
              "ABIJCgVTVEFSVBABEggKBFNUT1AQAhIJCgVQQVVTRRADEggKBFNLSVAQBBIL", 
              "CgdTSFVGRkxFEAVCLgoWb3JnLmF0d29yay5jb21tb25fbXNnc0IUQmVuY2ht", 
            "YXJrU3RhdGVQcm90b3M="));
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_atwork_pb_msgs_BenchmarkScenario__Descriptor = Descriptor.MessageTypes[0];
          internal__static_atwork_pb_msgs_BenchmarkScenario__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.BenchmarkScenario, global::atwork_pb_msgs.BenchmarkScenario.Builder>(internal__static_atwork_pb_msgs_BenchmarkScenario__Descriptor,
                  new string[] { "Type", "TypeId", "Description", });
          internal__static_atwork_pb_msgs_BenchmarkState__Descriptor = Descriptor.MessageTypes[1];
          internal__static_atwork_pb_msgs_BenchmarkState__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.BenchmarkState, global::atwork_pb_msgs.BenchmarkState.Builder>(internal__static_atwork_pb_msgs_BenchmarkState__Descriptor,
                  new string[] { "BenchmarkTime", "State", "Phase", "Scenario", "KnownTeams", "ConnectedTeams", });
          internal__static_atwork_pb_msgs_SetBenchmarkState__Descriptor = Descriptor.MessageTypes[2];
          internal__static_atwork_pb_msgs_SetBenchmarkState__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.SetBenchmarkState, global::atwork_pb_msgs.SetBenchmarkState.Builder>(internal__static_atwork_pb_msgs_SetBenchmarkState__Descriptor,
                  new string[] { "State", });
          internal__static_atwork_pb_msgs_SetBenchmarkScenario__Descriptor = Descriptor.MessageTypes[3];
          internal__static_atwork_pb_msgs_SetBenchmarkScenario__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.SetBenchmarkScenario, global::atwork_pb_msgs.SetBenchmarkScenario.Builder>(internal__static_atwork_pb_msgs_SetBenchmarkScenario__Descriptor,
                  new string[] { "Scenario", });
          internal__static_atwork_pb_msgs_SetBenchmarkTransitionEvent__Descriptor = Descriptor.MessageTypes[4];
          internal__static_atwork_pb_msgs_SetBenchmarkTransitionEvent__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.SetBenchmarkTransitionEvent, global::atwork_pb_msgs.SetBenchmarkTransitionEvent.Builder>(internal__static_atwork_pb_msgs_SetBenchmarkTransitionEvent__Descriptor,
                  new string[] { "Event", });
          return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::atwork_pb_msgs.Proto.Time.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BenchmarkScenario : pb::GeneratedMessage<BenchmarkScenario, BenchmarkScenario.Builder> {
    private BenchmarkScenario() { }
    private static readonly BenchmarkScenario defaultInstance = new BenchmarkScenario().MakeReadOnly();
    private static readonly string[] _benchmarkScenarioFieldNames = new string[] { "description", "type", "type_id" };
    private static readonly uint[] _benchmarkScenarioFieldTags = new uint[] { 26, 8, 16 };
    public static BenchmarkScenario DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BenchmarkScenario DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BenchmarkScenario ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::atwork_pb_msgs.Proto.BenchmarkState.internal__static_atwork_pb_msgs_BenchmarkScenario__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BenchmarkScenario, BenchmarkScenario.Builder> InternalFieldAccessors {
      get { return global::atwork_pb_msgs.Proto.BenchmarkState.internal__static_atwork_pb_msgs_BenchmarkScenario__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum BenchmarkType {
        NONE = 0,
        BNT = 1,
        BMT = 2,
        BTT = 3,
        PPT = 4,
        CBT = 5,
        AWF = 6,
        IRL = 7,
      }
      
    }
    #endregion
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private global::atwork_pb_msgs.BenchmarkScenario.Types.BenchmarkType type_ = global::atwork_pb_msgs.BenchmarkScenario.Types.BenchmarkType.NONE;
    public bool HasType {
      get { return hasType; }
    }
    public global::atwork_pb_msgs.BenchmarkScenario.Types.BenchmarkType Type {
      get { return type_; }
    }
    
    public const int TypeIdFieldNumber = 2;
    private bool hasTypeId;
    private uint typeId_;
    public bool HasTypeId {
      get { return hasTypeId; }
    }
    [global::System.CLSCompliant(false)]
    public uint TypeId {
      get { return typeId_; }
    }
    
    public const int DescriptionFieldNumber = 3;
    private bool hasDescription;
    private string description_ = "";
    public bool HasDescription {
      get { return hasDescription; }
    }
    public string Description {
      get { return description_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        if (!hasTypeId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _benchmarkScenarioFieldNames;
      if (hasType) {
        output.WriteEnum(1, field_names[1], (int) Type, Type);
      }
      if (hasTypeId) {
        output.WriteUInt32(2, field_names[2], TypeId);
      }
      if (hasDescription) {
        output.WriteString(3, field_names[0], Description);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Type);
      }
      if (hasTypeId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, TypeId);
      }
      if (hasDescription) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Description);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BenchmarkScenario ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BenchmarkScenario ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BenchmarkScenario ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BenchmarkScenario ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BenchmarkScenario ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BenchmarkScenario ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BenchmarkScenario ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BenchmarkScenario ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BenchmarkScenario ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BenchmarkScenario ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BenchmarkScenario MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BenchmarkScenario prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BenchmarkScenario, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BenchmarkScenario cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BenchmarkScenario result;
      
      private BenchmarkScenario PrepareBuilder() {
        if (resultIsReadOnly) {
          BenchmarkScenario original = result;
          result = new BenchmarkScenario();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BenchmarkScenario MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::atwork_pb_msgs.BenchmarkScenario.Descriptor; }
      }
      
      public override BenchmarkScenario DefaultInstanceForType {
        get { return global::atwork_pb_msgs.BenchmarkScenario.DefaultInstance; }
      }
      
      public override BenchmarkScenario BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BenchmarkScenario) {
          return MergeFrom((BenchmarkScenario) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BenchmarkScenario other) {
        if (other == global::atwork_pb_msgs.BenchmarkScenario.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasTypeId) {
          TypeId = other.TypeId;
        }
        if (other.HasDescription) {
          Description = other.Description;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_benchmarkScenarioFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _benchmarkScenarioFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              result.hasTypeId = input.ReadUInt32(ref result.typeId_);
              break;
            }
            case 26: {
              result.hasDescription = input.ReadString(ref result.description_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::atwork_pb_msgs.BenchmarkScenario.Types.BenchmarkType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::atwork_pb_msgs.BenchmarkScenario.Types.BenchmarkType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::atwork_pb_msgs.BenchmarkScenario.Types.BenchmarkType.NONE;
        return this;
      }
      
      public bool HasTypeId {
        get { return result.hasTypeId; }
      }
      [global::System.CLSCompliant(false)]
      public uint TypeId {
        get { return result.TypeId; }
        set { SetTypeId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetTypeId(uint value) {
        PrepareBuilder();
        result.hasTypeId = true;
        result.typeId_ = value;
        return this;
      }
      public Builder ClearTypeId() {
        PrepareBuilder();
        result.hasTypeId = false;
        result.typeId_ = 0;
        return this;
      }
      
      public bool HasDescription {
        get { return result.hasDescription; }
      }
      public string Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = "";
        return this;
      }
    }
    static BenchmarkScenario() {
      object.ReferenceEquals(global::atwork_pb_msgs.Proto.BenchmarkState.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BenchmarkState : pb::GeneratedMessage<BenchmarkState, BenchmarkState.Builder> {
    private BenchmarkState() { }
    private static readonly BenchmarkState defaultInstance = new BenchmarkState().MakeReadOnly();
    private static readonly string[] _benchmarkStateFieldNames = new string[] { "benchmark_time", "connected_teams", "known_teams", "phase", "scenario", "state" };
    private static readonly uint[] _benchmarkStateFieldTags = new uint[] { 10, 50, 42, 72, 34, 24 };
    public static BenchmarkState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BenchmarkState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BenchmarkState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::atwork_pb_msgs.Proto.BenchmarkState.internal__static_atwork_pb_msgs_BenchmarkState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BenchmarkState, BenchmarkState.Builder> InternalFieldAccessors {
      get { return global::atwork_pb_msgs.Proto.BenchmarkState.internal__static_atwork_pb_msgs_BenchmarkState__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum CompType {
        COMP_ID = 2000,
        MSG_TYPE = 100,
      }
      
      public enum State {
        RUNNING = 1,
        PAUSED = 2,
        FINISHED = 3,
        STOPPED = 4,
      }
      
      public enum Phase {
        EXECUTION = 0,
        CALIBRATION = 1,
        PREPARATION = 2,
      }
      
    }
    #endregion
    
    public const int BenchmarkTimeFieldNumber = 1;
    private bool hasBenchmarkTime;
    private global::atwork_pb_msgs.Time benchmarkTime_;
    public bool HasBenchmarkTime {
      get { return hasBenchmarkTime; }
    }
    public global::atwork_pb_msgs.Time BenchmarkTime {
      get { return benchmarkTime_ ?? global::atwork_pb_msgs.Time.DefaultInstance; }
    }
    
    public const int StateFieldNumber = 3;
    private bool hasState;
    private global::atwork_pb_msgs.BenchmarkState.Types.State state_ = global::atwork_pb_msgs.BenchmarkState.Types.State.RUNNING;
    public bool HasState {
      get { return hasState; }
    }
    public global::atwork_pb_msgs.BenchmarkState.Types.State State {
      get { return state_; }
    }
    
    public const int PhaseFieldNumber = 9;
    private bool hasPhase;
    private global::atwork_pb_msgs.BenchmarkState.Types.Phase phase_ = global::atwork_pb_msgs.BenchmarkState.Types.Phase.EXECUTION;
    public bool HasPhase {
      get { return hasPhase; }
    }
    public global::atwork_pb_msgs.BenchmarkState.Types.Phase Phase {
      get { return phase_; }
    }
    
    public const int ScenarioFieldNumber = 4;
    private bool hasScenario;
    private global::atwork_pb_msgs.BenchmarkScenario scenario_;
    public bool HasScenario {
      get { return hasScenario; }
    }
    public global::atwork_pb_msgs.BenchmarkScenario Scenario {
      get { return scenario_ ?? global::atwork_pb_msgs.BenchmarkScenario.DefaultInstance; }
    }
    
    public const int KnownTeamsFieldNumber = 5;
    private pbc::PopsicleList<string> knownTeams_ = new pbc::PopsicleList<string>();
    public scg::IList<string> KnownTeamsList {
      get { return pbc::Lists.AsReadOnly(knownTeams_); }
    }
    public int KnownTeamsCount {
      get { return knownTeams_.Count; }
    }
    public string GetKnownTeams(int index) {
      return knownTeams_[index];
    }
    
    public const int ConnectedTeamsFieldNumber = 6;
    private pbc::PopsicleList<string> connectedTeams_ = new pbc::PopsicleList<string>();
    public scg::IList<string> ConnectedTeamsList {
      get { return pbc::Lists.AsReadOnly(connectedTeams_); }
    }
    public int ConnectedTeamsCount {
      get { return connectedTeams_.Count; }
    }
    public string GetConnectedTeams(int index) {
      return connectedTeams_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBenchmarkTime) return false;
        if (!hasState) return false;
        if (!hasPhase) return false;
        if (!hasScenario) return false;
        if (!BenchmarkTime.IsInitialized) return false;
        if (!Scenario.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _benchmarkStateFieldNames;
      if (hasBenchmarkTime) {
        output.WriteMessage(1, field_names[0], BenchmarkTime);
      }
      if (hasState) {
        output.WriteEnum(3, field_names[5], (int) State, State);
      }
      if (hasScenario) {
        output.WriteMessage(4, field_names[4], Scenario);
      }
      if (knownTeams_.Count > 0) {
        output.WriteStringArray(5, field_names[2], knownTeams_);
      }
      if (connectedTeams_.Count > 0) {
        output.WriteStringArray(6, field_names[1], connectedTeams_);
      }
      if (hasPhase) {
        output.WriteEnum(9, field_names[3], (int) Phase, Phase);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasBenchmarkTime) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, BenchmarkTime);
      }
      if (hasState) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) State);
      }
      if (hasPhase) {
        size += pb::CodedOutputStream.ComputeEnumSize(9, (int) Phase);
      }
      if (hasScenario) {
        size += pb::CodedOutputStream.ComputeMessageSize(4, Scenario);
      }
      {
        int dataSize = 0;
        foreach (string element in KnownTeamsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * knownTeams_.Count;
      }
      {
        int dataSize = 0;
        foreach (string element in ConnectedTeamsList) {
          dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * connectedTeams_.Count;
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BenchmarkState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BenchmarkState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BenchmarkState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BenchmarkState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BenchmarkState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BenchmarkState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BenchmarkState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BenchmarkState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BenchmarkState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BenchmarkState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BenchmarkState MakeReadOnly() {
      knownTeams_.MakeReadOnly();
      connectedTeams_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BenchmarkState prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BenchmarkState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BenchmarkState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BenchmarkState result;
      
      private BenchmarkState PrepareBuilder() {
        if (resultIsReadOnly) {
          BenchmarkState original = result;
          result = new BenchmarkState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BenchmarkState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::atwork_pb_msgs.BenchmarkState.Descriptor; }
      }
      
      public override BenchmarkState DefaultInstanceForType {
        get { return global::atwork_pb_msgs.BenchmarkState.DefaultInstance; }
      }
      
      public override BenchmarkState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BenchmarkState) {
          return MergeFrom((BenchmarkState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BenchmarkState other) {
        if (other == global::atwork_pb_msgs.BenchmarkState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBenchmarkTime) {
          MergeBenchmarkTime(other.BenchmarkTime);
        }
        if (other.HasState) {
          State = other.State;
        }
        if (other.HasPhase) {
          Phase = other.Phase;
        }
        if (other.HasScenario) {
          MergeScenario(other.Scenario);
        }
        if (other.knownTeams_.Count != 0) {
          result.knownTeams_.Add(other.knownTeams_);
        }
        if (other.connectedTeams_.Count != 0) {
          result.connectedTeams_.Add(other.connectedTeams_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_benchmarkStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _benchmarkStateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::atwork_pb_msgs.Time.Builder subBuilder = global::atwork_pb_msgs.Time.CreateBuilder();
              if (result.hasBenchmarkTime) {
                subBuilder.MergeFrom(BenchmarkTime);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              BenchmarkTime = subBuilder.BuildPartial();
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.state_, out unknown)) {
                result.hasState = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 34: {
              global::atwork_pb_msgs.BenchmarkScenario.Builder subBuilder = global::atwork_pb_msgs.BenchmarkScenario.CreateBuilder();
              if (result.hasScenario) {
                subBuilder.MergeFrom(Scenario);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Scenario = subBuilder.BuildPartial();
              break;
            }
            case 42: {
              input.ReadStringArray(tag, field_name, result.knownTeams_);
              break;
            }
            case 50: {
              input.ReadStringArray(tag, field_name, result.connectedTeams_);
              break;
            }
            case 72: {
              object unknown;
              if(input.ReadEnum(ref result.phase_, out unknown)) {
                result.hasPhase = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(9, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBenchmarkTime {
       get { return result.hasBenchmarkTime; }
      }
      public global::atwork_pb_msgs.Time BenchmarkTime {
        get { return result.BenchmarkTime; }
        set { SetBenchmarkTime(value); }
      }
      public Builder SetBenchmarkTime(global::atwork_pb_msgs.Time value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBenchmarkTime = true;
        result.benchmarkTime_ = value;
        return this;
      }
      public Builder SetBenchmarkTime(global::atwork_pb_msgs.Time.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasBenchmarkTime = true;
        result.benchmarkTime_ = builderForValue.Build();
        return this;
      }
      public Builder MergeBenchmarkTime(global::atwork_pb_msgs.Time value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasBenchmarkTime &&
            result.benchmarkTime_ != global::atwork_pb_msgs.Time.DefaultInstance) {
            result.benchmarkTime_ = global::atwork_pb_msgs.Time.CreateBuilder(result.benchmarkTime_).MergeFrom(value).BuildPartial();
        } else {
          result.benchmarkTime_ = value;
        }
        result.hasBenchmarkTime = true;
        return this;
      }
      public Builder ClearBenchmarkTime() {
        PrepareBuilder();
        result.hasBenchmarkTime = false;
        result.benchmarkTime_ = null;
        return this;
      }
      
      public bool HasState {
       get { return result.hasState; }
      }
      public global::atwork_pb_msgs.BenchmarkState.Types.State State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(global::atwork_pb_msgs.BenchmarkState.Types.State value) {
        PrepareBuilder();
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder ClearState() {
        PrepareBuilder();
        result.hasState = false;
        result.state_ = global::atwork_pb_msgs.BenchmarkState.Types.State.RUNNING;
        return this;
      }
      
      public bool HasPhase {
       get { return result.hasPhase; }
      }
      public global::atwork_pb_msgs.BenchmarkState.Types.Phase Phase {
        get { return result.Phase; }
        set { SetPhase(value); }
      }
      public Builder SetPhase(global::atwork_pb_msgs.BenchmarkState.Types.Phase value) {
        PrepareBuilder();
        result.hasPhase = true;
        result.phase_ = value;
        return this;
      }
      public Builder ClearPhase() {
        PrepareBuilder();
        result.hasPhase = false;
        result.phase_ = global::atwork_pb_msgs.BenchmarkState.Types.Phase.EXECUTION;
        return this;
      }
      
      public bool HasScenario {
       get { return result.hasScenario; }
      }
      public global::atwork_pb_msgs.BenchmarkScenario Scenario {
        get { return result.Scenario; }
        set { SetScenario(value); }
      }
      public Builder SetScenario(global::atwork_pb_msgs.BenchmarkScenario value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasScenario = true;
        result.scenario_ = value;
        return this;
      }
      public Builder SetScenario(global::atwork_pb_msgs.BenchmarkScenario.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasScenario = true;
        result.scenario_ = builderForValue.Build();
        return this;
      }
      public Builder MergeScenario(global::atwork_pb_msgs.BenchmarkScenario value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasScenario &&
            result.scenario_ != global::atwork_pb_msgs.BenchmarkScenario.DefaultInstance) {
            result.scenario_ = global::atwork_pb_msgs.BenchmarkScenario.CreateBuilder(result.scenario_).MergeFrom(value).BuildPartial();
        } else {
          result.scenario_ = value;
        }
        result.hasScenario = true;
        return this;
      }
      public Builder ClearScenario() {
        PrepareBuilder();
        result.hasScenario = false;
        result.scenario_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<string> KnownTeamsList {
        get { return PrepareBuilder().knownTeams_; }
      }
      public int KnownTeamsCount {
        get { return result.KnownTeamsCount; }
      }
      public string GetKnownTeams(int index) {
        return result.GetKnownTeams(index);
      }
      public Builder SetKnownTeams(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.knownTeams_[index] = value;
        return this;
      }
      public Builder AddKnownTeams(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.knownTeams_.Add(value);
        return this;
      }
      public Builder AddRangeKnownTeams(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.knownTeams_.Add(values);
        return this;
      }
      public Builder ClearKnownTeams() {
        PrepareBuilder();
        result.knownTeams_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<string> ConnectedTeamsList {
        get { return PrepareBuilder().connectedTeams_; }
      }
      public int ConnectedTeamsCount {
        get { return result.ConnectedTeamsCount; }
      }
      public string GetConnectedTeams(int index) {
        return result.GetConnectedTeams(index);
      }
      public Builder SetConnectedTeams(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.connectedTeams_[index] = value;
        return this;
      }
      public Builder AddConnectedTeams(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.connectedTeams_.Add(value);
        return this;
      }
      public Builder AddRangeConnectedTeams(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.connectedTeams_.Add(values);
        return this;
      }
      public Builder ClearConnectedTeams() {
        PrepareBuilder();
        result.connectedTeams_.Clear();
        return this;
      }
    }
    static BenchmarkState() {
      object.ReferenceEquals(global::atwork_pb_msgs.Proto.BenchmarkState.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetBenchmarkState : pb::GeneratedMessage<SetBenchmarkState, SetBenchmarkState.Builder> {
    private SetBenchmarkState() { }
    private static readonly SetBenchmarkState defaultInstance = new SetBenchmarkState().MakeReadOnly();
    private static readonly string[] _setBenchmarkStateFieldNames = new string[] { "state" };
    private static readonly uint[] _setBenchmarkStateFieldTags = new uint[] { 8 };
    public static SetBenchmarkState DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetBenchmarkState DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetBenchmarkState ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::atwork_pb_msgs.Proto.BenchmarkState.internal__static_atwork_pb_msgs_SetBenchmarkState__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetBenchmarkState, SetBenchmarkState.Builder> InternalFieldAccessors {
      get { return global::atwork_pb_msgs.Proto.BenchmarkState.internal__static_atwork_pb_msgs_SetBenchmarkState__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum CompType {
        COMP_ID = 2000,
        MSG_TYPE = 101,
      }
      
    }
    #endregion
    
    public const int StateFieldNumber = 1;
    private bool hasState;
    private global::atwork_pb_msgs.BenchmarkState.Types.State state_ = global::atwork_pb_msgs.BenchmarkState.Types.State.RUNNING;
    public bool HasState {
      get { return hasState; }
    }
    public global::atwork_pb_msgs.BenchmarkState.Types.State State {
      get { return state_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasState) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setBenchmarkStateFieldNames;
      if (hasState) {
        output.WriteEnum(1, field_names[0], (int) State, State);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasState) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) State);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetBenchmarkState ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetBenchmarkState ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetBenchmarkState ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetBenchmarkState ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetBenchmarkState ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetBenchmarkState ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetBenchmarkState ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetBenchmarkState ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetBenchmarkState ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetBenchmarkState ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetBenchmarkState MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetBenchmarkState prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetBenchmarkState, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetBenchmarkState cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetBenchmarkState result;
      
      private SetBenchmarkState PrepareBuilder() {
        if (resultIsReadOnly) {
          SetBenchmarkState original = result;
          result = new SetBenchmarkState();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetBenchmarkState MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::atwork_pb_msgs.SetBenchmarkState.Descriptor; }
      }
      
      public override SetBenchmarkState DefaultInstanceForType {
        get { return global::atwork_pb_msgs.SetBenchmarkState.DefaultInstance; }
      }
      
      public override SetBenchmarkState BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetBenchmarkState) {
          return MergeFrom((SetBenchmarkState) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetBenchmarkState other) {
        if (other == global::atwork_pb_msgs.SetBenchmarkState.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasState) {
          State = other.State;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setBenchmarkStateFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setBenchmarkStateFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.state_, out unknown)) {
                result.hasState = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasState {
       get { return result.hasState; }
      }
      public global::atwork_pb_msgs.BenchmarkState.Types.State State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(global::atwork_pb_msgs.BenchmarkState.Types.State value) {
        PrepareBuilder();
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder ClearState() {
        PrepareBuilder();
        result.hasState = false;
        result.state_ = global::atwork_pb_msgs.BenchmarkState.Types.State.RUNNING;
        return this;
      }
    }
    static SetBenchmarkState() {
      object.ReferenceEquals(global::atwork_pb_msgs.Proto.BenchmarkState.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetBenchmarkScenario : pb::GeneratedMessage<SetBenchmarkScenario, SetBenchmarkScenario.Builder> {
    private SetBenchmarkScenario() { }
    private static readonly SetBenchmarkScenario defaultInstance = new SetBenchmarkScenario().MakeReadOnly();
    private static readonly string[] _setBenchmarkScenarioFieldNames = new string[] { "scenario" };
    private static readonly uint[] _setBenchmarkScenarioFieldTags = new uint[] { 10 };
    public static SetBenchmarkScenario DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetBenchmarkScenario DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetBenchmarkScenario ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::atwork_pb_msgs.Proto.BenchmarkState.internal__static_atwork_pb_msgs_SetBenchmarkScenario__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetBenchmarkScenario, SetBenchmarkScenario.Builder> InternalFieldAccessors {
      get { return global::atwork_pb_msgs.Proto.BenchmarkState.internal__static_atwork_pb_msgs_SetBenchmarkScenario__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum CompType {
        COMP_ID = 2000,
        MSG_TYPE = 102,
      }
      
    }
    #endregion
    
    public const int ScenarioFieldNumber = 1;
    private bool hasScenario;
    private global::atwork_pb_msgs.BenchmarkScenario scenario_;
    public bool HasScenario {
      get { return hasScenario; }
    }
    public global::atwork_pb_msgs.BenchmarkScenario Scenario {
      get { return scenario_ ?? global::atwork_pb_msgs.BenchmarkScenario.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasScenario) return false;
        if (!Scenario.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setBenchmarkScenarioFieldNames;
      if (hasScenario) {
        output.WriteMessage(1, field_names[0], Scenario);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasScenario) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Scenario);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetBenchmarkScenario ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetBenchmarkScenario ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetBenchmarkScenario ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetBenchmarkScenario ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetBenchmarkScenario ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetBenchmarkScenario ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetBenchmarkScenario ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetBenchmarkScenario ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetBenchmarkScenario ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetBenchmarkScenario ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetBenchmarkScenario MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetBenchmarkScenario prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetBenchmarkScenario, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetBenchmarkScenario cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetBenchmarkScenario result;
      
      private SetBenchmarkScenario PrepareBuilder() {
        if (resultIsReadOnly) {
          SetBenchmarkScenario original = result;
          result = new SetBenchmarkScenario();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetBenchmarkScenario MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::atwork_pb_msgs.SetBenchmarkScenario.Descriptor; }
      }
      
      public override SetBenchmarkScenario DefaultInstanceForType {
        get { return global::atwork_pb_msgs.SetBenchmarkScenario.DefaultInstance; }
      }
      
      public override SetBenchmarkScenario BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetBenchmarkScenario) {
          return MergeFrom((SetBenchmarkScenario) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetBenchmarkScenario other) {
        if (other == global::atwork_pb_msgs.SetBenchmarkScenario.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasScenario) {
          MergeScenario(other.Scenario);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setBenchmarkScenarioFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setBenchmarkScenarioFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::atwork_pb_msgs.BenchmarkScenario.Builder subBuilder = global::atwork_pb_msgs.BenchmarkScenario.CreateBuilder();
              if (result.hasScenario) {
                subBuilder.MergeFrom(Scenario);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Scenario = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasScenario {
       get { return result.hasScenario; }
      }
      public global::atwork_pb_msgs.BenchmarkScenario Scenario {
        get { return result.Scenario; }
        set { SetScenario(value); }
      }
      public Builder SetScenario(global::atwork_pb_msgs.BenchmarkScenario value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasScenario = true;
        result.scenario_ = value;
        return this;
      }
      public Builder SetScenario(global::atwork_pb_msgs.BenchmarkScenario.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasScenario = true;
        result.scenario_ = builderForValue.Build();
        return this;
      }
      public Builder MergeScenario(global::atwork_pb_msgs.BenchmarkScenario value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasScenario &&
            result.scenario_ != global::atwork_pb_msgs.BenchmarkScenario.DefaultInstance) {
            result.scenario_ = global::atwork_pb_msgs.BenchmarkScenario.CreateBuilder(result.scenario_).MergeFrom(value).BuildPartial();
        } else {
          result.scenario_ = value;
        }
        result.hasScenario = true;
        return this;
      }
      public Builder ClearScenario() {
        PrepareBuilder();
        result.hasScenario = false;
        result.scenario_ = null;
        return this;
      }
    }
    static SetBenchmarkScenario() {
      object.ReferenceEquals(global::atwork_pb_msgs.Proto.BenchmarkState.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SetBenchmarkTransitionEvent : pb::GeneratedMessage<SetBenchmarkTransitionEvent, SetBenchmarkTransitionEvent.Builder> {
    private SetBenchmarkTransitionEvent() { }
    private static readonly SetBenchmarkTransitionEvent defaultInstance = new SetBenchmarkTransitionEvent().MakeReadOnly();
    private static readonly string[] _setBenchmarkTransitionEventFieldNames = new string[] { "event" };
    private static readonly uint[] _setBenchmarkTransitionEventFieldTags = new uint[] { 8 };
    public static SetBenchmarkTransitionEvent DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SetBenchmarkTransitionEvent DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SetBenchmarkTransitionEvent ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::atwork_pb_msgs.Proto.BenchmarkState.internal__static_atwork_pb_msgs_SetBenchmarkTransitionEvent__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SetBenchmarkTransitionEvent, SetBenchmarkTransitionEvent.Builder> InternalFieldAccessors {
      get { return global::atwork_pb_msgs.Proto.BenchmarkState.internal__static_atwork_pb_msgs_SetBenchmarkTransitionEvent__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum CompType {
        COMP_ID = 2000,
        MSG_TYPE = 103,
      }
      
      public enum Event {
        RESET = 0,
        START = 1,
        STOP = 2,
        PAUSE = 3,
        SKIP = 4,
        SHUFFLE = 5,
      }
      
    }
    #endregion
    
    public const int EventFieldNumber = 1;
    private bool hasEvent;
    private global::atwork_pb_msgs.SetBenchmarkTransitionEvent.Types.Event event_ = global::atwork_pb_msgs.SetBenchmarkTransitionEvent.Types.Event.RESET;
    public bool HasEvent {
      get { return hasEvent; }
    }
    public global::atwork_pb_msgs.SetBenchmarkTransitionEvent.Types.Event Event {
      get { return event_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEvent) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _setBenchmarkTransitionEventFieldNames;
      if (hasEvent) {
        output.WriteEnum(1, field_names[0], (int) Event, Event);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEvent) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Event);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SetBenchmarkTransitionEvent ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetBenchmarkTransitionEvent ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetBenchmarkTransitionEvent ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SetBenchmarkTransitionEvent ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SetBenchmarkTransitionEvent ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetBenchmarkTransitionEvent ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SetBenchmarkTransitionEvent ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SetBenchmarkTransitionEvent ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SetBenchmarkTransitionEvent ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SetBenchmarkTransitionEvent ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SetBenchmarkTransitionEvent MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SetBenchmarkTransitionEvent prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SetBenchmarkTransitionEvent, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SetBenchmarkTransitionEvent cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SetBenchmarkTransitionEvent result;
      
      private SetBenchmarkTransitionEvent PrepareBuilder() {
        if (resultIsReadOnly) {
          SetBenchmarkTransitionEvent original = result;
          result = new SetBenchmarkTransitionEvent();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SetBenchmarkTransitionEvent MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::atwork_pb_msgs.SetBenchmarkTransitionEvent.Descriptor; }
      }
      
      public override SetBenchmarkTransitionEvent DefaultInstanceForType {
        get { return global::atwork_pb_msgs.SetBenchmarkTransitionEvent.DefaultInstance; }
      }
      
      public override SetBenchmarkTransitionEvent BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SetBenchmarkTransitionEvent) {
          return MergeFrom((SetBenchmarkTransitionEvent) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SetBenchmarkTransitionEvent other) {
        if (other == global::atwork_pb_msgs.SetBenchmarkTransitionEvent.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEvent) {
          Event = other.Event;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_setBenchmarkTransitionEventFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _setBenchmarkTransitionEventFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.event_, out unknown)) {
                result.hasEvent = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEvent {
       get { return result.hasEvent; }
      }
      public global::atwork_pb_msgs.SetBenchmarkTransitionEvent.Types.Event Event {
        get { return result.Event; }
        set { SetEvent(value); }
      }
      public Builder SetEvent(global::atwork_pb_msgs.SetBenchmarkTransitionEvent.Types.Event value) {
        PrepareBuilder();
        result.hasEvent = true;
        result.event_ = value;
        return this;
      }
      public Builder ClearEvent() {
        PrepareBuilder();
        result.hasEvent = false;
        result.event_ = global::atwork_pb_msgs.SetBenchmarkTransitionEvent.Types.Event.RESET;
        return this;
      }
    }
    static SetBenchmarkTransitionEvent() {
      object.ReferenceEquals(global::atwork_pb_msgs.Proto.BenchmarkState.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
