// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace atwork_pb_msgs {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class VersionInfo {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_atwork_pb_msgs_VersionInfo__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.VersionInfo, global::atwork_pb_msgs.VersionInfo.Builder> internal__static_atwork_pb_msgs_VersionInfo__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static VersionInfo() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            string.Concat(
              "ChFWZXJzaW9uSW5mby5wcm90bxIOYXR3b3JrX3BiX21zZ3MikgEKC1ZlcnNp", 
              "b25JbmZvEhUKDXZlcnNpb25fbWFqb3IYASACKA0SFQoNdmVyc2lvbl9taW5v", 
              "chgCIAIoDRIVCg12ZXJzaW9uX21pY3JvGAMgAigNEhYKDnZlcnNpb25fc3Ry", 
              "aW5nGAQgAigJIiYKCENvbXBUeXBlEgwKB0NPTVBfSUQQ0A8SDAoITVNHX1RZ", 
            "UEUQA0InChZvcmcuYXR3b3JrLmNvbW1vbl9tc2dzQg1WZXJzaW9uUHJvdG9z"));
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_atwork_pb_msgs_VersionInfo__Descriptor = Descriptor.MessageTypes[0];
          internal__static_atwork_pb_msgs_VersionInfo__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.VersionInfo, global::atwork_pb_msgs.VersionInfo.Builder>(internal__static_atwork_pb_msgs_VersionInfo__Descriptor,
                  new string[] { "VersionMajor", "VersionMinor", "VersionMicro", "VersionString", });
          return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class VersionInfo : pb::GeneratedMessage<VersionInfo, VersionInfo.Builder> {
    private VersionInfo() { }
    private static readonly VersionInfo defaultInstance = new VersionInfo().MakeReadOnly();
    private static readonly string[] _versionInfoFieldNames = new string[] { "version_major", "version_micro", "version_minor", "version_string" };
    private static readonly uint[] _versionInfoFieldTags = new uint[] { 8, 24, 16, 34 };
    public static VersionInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override VersionInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override VersionInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::atwork_pb_msgs.Proto.VersionInfo.internal__static_atwork_pb_msgs_VersionInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<VersionInfo, VersionInfo.Builder> InternalFieldAccessors {
      get { return global::atwork_pb_msgs.Proto.VersionInfo.internal__static_atwork_pb_msgs_VersionInfo__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum CompType {
        COMP_ID = 2000,
        MSG_TYPE = 3,
      }
      
    }
    #endregion
    
    public const int VersionMajorFieldNumber = 1;
    private bool hasVersionMajor;
    private uint versionMajor_;
    public bool HasVersionMajor {
      get { return hasVersionMajor; }
    }
    [global::System.CLSCompliant(false)]
    public uint VersionMajor {
      get { return versionMajor_; }
    }
    
    public const int VersionMinorFieldNumber = 2;
    private bool hasVersionMinor;
    private uint versionMinor_;
    public bool HasVersionMinor {
      get { return hasVersionMinor; }
    }
    [global::System.CLSCompliant(false)]
    public uint VersionMinor {
      get { return versionMinor_; }
    }
    
    public const int VersionMicroFieldNumber = 3;
    private bool hasVersionMicro;
    private uint versionMicro_;
    public bool HasVersionMicro {
      get { return hasVersionMicro; }
    }
    [global::System.CLSCompliant(false)]
    public uint VersionMicro {
      get { return versionMicro_; }
    }
    
    public const int VersionStringFieldNumber = 4;
    private bool hasVersionString;
    private string versionString_ = "";
    public bool HasVersionString {
      get { return hasVersionString; }
    }
    public string VersionString {
      get { return versionString_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasVersionMajor) return false;
        if (!hasVersionMinor) return false;
        if (!hasVersionMicro) return false;
        if (!hasVersionString) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _versionInfoFieldNames;
      if (hasVersionMajor) {
        output.WriteUInt32(1, field_names[0], VersionMajor);
      }
      if (hasVersionMinor) {
        output.WriteUInt32(2, field_names[2], VersionMinor);
      }
      if (hasVersionMicro) {
        output.WriteUInt32(3, field_names[1], VersionMicro);
      }
      if (hasVersionString) {
        output.WriteString(4, field_names[3], VersionString);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasVersionMajor) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, VersionMajor);
      }
      if (hasVersionMinor) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, VersionMinor);
      }
      if (hasVersionMicro) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, VersionMicro);
      }
      if (hasVersionString) {
        size += pb::CodedOutputStream.ComputeStringSize(4, VersionString);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static VersionInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static VersionInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static VersionInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static VersionInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static VersionInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static VersionInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static VersionInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static VersionInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static VersionInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static VersionInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private VersionInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(VersionInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<VersionInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(VersionInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private VersionInfo result;
      
      private VersionInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          VersionInfo original = result;
          result = new VersionInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override VersionInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::atwork_pb_msgs.VersionInfo.Descriptor; }
      }
      
      public override VersionInfo DefaultInstanceForType {
        get { return global::atwork_pb_msgs.VersionInfo.DefaultInstance; }
      }
      
      public override VersionInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is VersionInfo) {
          return MergeFrom((VersionInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(VersionInfo other) {
        if (other == global::atwork_pb_msgs.VersionInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasVersionMajor) {
          VersionMajor = other.VersionMajor;
        }
        if (other.HasVersionMinor) {
          VersionMinor = other.VersionMinor;
        }
        if (other.HasVersionMicro) {
          VersionMicro = other.VersionMicro;
        }
        if (other.HasVersionString) {
          VersionString = other.VersionString;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_versionInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _versionInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasVersionMajor = input.ReadUInt32(ref result.versionMajor_);
              break;
            }
            case 16: {
              result.hasVersionMinor = input.ReadUInt32(ref result.versionMinor_);
              break;
            }
            case 24: {
              result.hasVersionMicro = input.ReadUInt32(ref result.versionMicro_);
              break;
            }
            case 34: {
              result.hasVersionString = input.ReadString(ref result.versionString_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasVersionMajor {
        get { return result.hasVersionMajor; }
      }
      [global::System.CLSCompliant(false)]
      public uint VersionMajor {
        get { return result.VersionMajor; }
        set { SetVersionMajor(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetVersionMajor(uint value) {
        PrepareBuilder();
        result.hasVersionMajor = true;
        result.versionMajor_ = value;
        return this;
      }
      public Builder ClearVersionMajor() {
        PrepareBuilder();
        result.hasVersionMajor = false;
        result.versionMajor_ = 0;
        return this;
      }
      
      public bool HasVersionMinor {
        get { return result.hasVersionMinor; }
      }
      [global::System.CLSCompliant(false)]
      public uint VersionMinor {
        get { return result.VersionMinor; }
        set { SetVersionMinor(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetVersionMinor(uint value) {
        PrepareBuilder();
        result.hasVersionMinor = true;
        result.versionMinor_ = value;
        return this;
      }
      public Builder ClearVersionMinor() {
        PrepareBuilder();
        result.hasVersionMinor = false;
        result.versionMinor_ = 0;
        return this;
      }
      
      public bool HasVersionMicro {
        get { return result.hasVersionMicro; }
      }
      [global::System.CLSCompliant(false)]
      public uint VersionMicro {
        get { return result.VersionMicro; }
        set { SetVersionMicro(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetVersionMicro(uint value) {
        PrepareBuilder();
        result.hasVersionMicro = true;
        result.versionMicro_ = value;
        return this;
      }
      public Builder ClearVersionMicro() {
        PrepareBuilder();
        result.hasVersionMicro = false;
        result.versionMicro_ = 0;
        return this;
      }
      
      public bool HasVersionString {
        get { return result.hasVersionString; }
      }
      public string VersionString {
        get { return result.VersionString; }
        set { SetVersionString(value); }
      }
      public Builder SetVersionString(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVersionString = true;
        result.versionString_ = value;
        return this;
      }
      public Builder ClearVersionString() {
        PrepareBuilder();
        result.hasVersionString = false;
        result.versionString_ = "";
        return this;
      }
    }
    static VersionInfo() {
      object.ReferenceEquals(global::atwork_pb_msgs.Proto.VersionInfo.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
