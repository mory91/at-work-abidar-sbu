// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace atwork_pb_msgs {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class NavigationTask {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_atwork_pb_msgs_NavigationTask__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.NavigationTask, global::atwork_pb_msgs.NavigationTask.Builder> internal__static_atwork_pb_msgs_NavigationTask__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static NavigationTask() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            string.Concat(
              "ChROYXZpZ2F0aW9uVGFzay5wcm90bxIOYXR3b3JrX3BiX21zZ3MaD0ludmVu", 
              "dG9yeS5wcm90bxoKVGltZS5wcm90byLpAQoOTmF2aWdhdGlvblRhc2sSNAoI", 
              "bG9jYXRpb24YASACKAsyIi5hdHdvcmtfcGJfbXNncy5Mb2NhdGlvbklkZW50", 
              "aWZpZXISPwoLb3JpZW50YXRpb24YAiACKA4yKi5hdHdvcmtfcGJfbXNncy5O", 
              "YXZpZ2F0aW9uVGFzay5PcmllbnRhdGlvbhInCgl3YWl0X3RpbWUYAyACKAsy", 
              "FC5hdHdvcmtfcGJfbXNncy5UaW1lIjcKC09yaWVudGF0aW9uEgkKBU5PUlRI", 
              "EAESCAoERUFTVBACEgkKBVNPVVRIEAMSCAoEV0VTVBAEQi4KFm9yZy5hdHdv", 
            "cmsuY29tbW9uX21zZ3NCFE5hdmlnYXRpb25UYXNrUHJvdG9z"));
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_atwork_pb_msgs_NavigationTask__Descriptor = Descriptor.MessageTypes[0];
          internal__static_atwork_pb_msgs_NavigationTask__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.NavigationTask, global::atwork_pb_msgs.NavigationTask.Builder>(internal__static_atwork_pb_msgs_NavigationTask__Descriptor,
                  new string[] { "Location", "Orientation", "WaitTime", });
          return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::atwork_pb_msgs.Proto.Inventory.Descriptor, 
            global::atwork_pb_msgs.Proto.Time.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class NavigationTask : pb::GeneratedMessage<NavigationTask, NavigationTask.Builder> {
    private NavigationTask() { }
    private static readonly NavigationTask defaultInstance = new NavigationTask().MakeReadOnly();
    private static readonly string[] _navigationTaskFieldNames = new string[] { "location", "orientation", "wait_time" };
    private static readonly uint[] _navigationTaskFieldTags = new uint[] { 10, 16, 26 };
    public static NavigationTask DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override NavigationTask DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override NavigationTask ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::atwork_pb_msgs.Proto.NavigationTask.internal__static_atwork_pb_msgs_NavigationTask__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<NavigationTask, NavigationTask.Builder> InternalFieldAccessors {
      get { return global::atwork_pb_msgs.Proto.NavigationTask.internal__static_atwork_pb_msgs_NavigationTask__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum Orientation {
        NORTH = 1,
        EAST = 2,
        SOUTH = 3,
        WEST = 4,
      }
      
    }
    #endregion
    
    public const int LocationFieldNumber = 1;
    private bool hasLocation;
    private global::atwork_pb_msgs.LocationIdentifier location_;
    public bool HasLocation {
      get { return hasLocation; }
    }
    public global::atwork_pb_msgs.LocationIdentifier Location {
      get { return location_ ?? global::atwork_pb_msgs.LocationIdentifier.DefaultInstance; }
    }
    
    public const int OrientationFieldNumber = 2;
    private bool hasOrientation;
    private global::atwork_pb_msgs.NavigationTask.Types.Orientation orientation_ = global::atwork_pb_msgs.NavigationTask.Types.Orientation.NORTH;
    public bool HasOrientation {
      get { return hasOrientation; }
    }
    public global::atwork_pb_msgs.NavigationTask.Types.Orientation Orientation {
      get { return orientation_; }
    }
    
    public const int WaitTimeFieldNumber = 3;
    private bool hasWaitTime;
    private global::atwork_pb_msgs.Time waitTime_;
    public bool HasWaitTime {
      get { return hasWaitTime; }
    }
    public global::atwork_pb_msgs.Time WaitTime {
      get { return waitTime_ ?? global::atwork_pb_msgs.Time.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasLocation) return false;
        if (!hasOrientation) return false;
        if (!hasWaitTime) return false;
        if (!Location.IsInitialized) return false;
        if (!WaitTime.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _navigationTaskFieldNames;
      if (hasLocation) {
        output.WriteMessage(1, field_names[0], Location);
      }
      if (hasOrientation) {
        output.WriteEnum(2, field_names[1], (int) Orientation, Orientation);
      }
      if (hasWaitTime) {
        output.WriteMessage(3, field_names[2], WaitTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLocation) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Location);
      }
      if (hasOrientation) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Orientation);
      }
      if (hasWaitTime) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, WaitTime);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static NavigationTask ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NavigationTask ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NavigationTask ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static NavigationTask ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static NavigationTask ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NavigationTask ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static NavigationTask ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static NavigationTask ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static NavigationTask ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static NavigationTask ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private NavigationTask MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(NavigationTask prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<NavigationTask, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(NavigationTask cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private NavigationTask result;
      
      private NavigationTask PrepareBuilder() {
        if (resultIsReadOnly) {
          NavigationTask original = result;
          result = new NavigationTask();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override NavigationTask MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::atwork_pb_msgs.NavigationTask.Descriptor; }
      }
      
      public override NavigationTask DefaultInstanceForType {
        get { return global::atwork_pb_msgs.NavigationTask.DefaultInstance; }
      }
      
      public override NavigationTask BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is NavigationTask) {
          return MergeFrom((NavigationTask) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(NavigationTask other) {
        if (other == global::atwork_pb_msgs.NavigationTask.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLocation) {
          MergeLocation(other.Location);
        }
        if (other.HasOrientation) {
          Orientation = other.Orientation;
        }
        if (other.HasWaitTime) {
          MergeWaitTime(other.WaitTime);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_navigationTaskFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _navigationTaskFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::atwork_pb_msgs.LocationIdentifier.Builder subBuilder = global::atwork_pb_msgs.LocationIdentifier.CreateBuilder();
              if (result.hasLocation) {
                subBuilder.MergeFrom(Location);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Location = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.orientation_, out unknown)) {
                result.hasOrientation = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 26: {
              global::atwork_pb_msgs.Time.Builder subBuilder = global::atwork_pb_msgs.Time.CreateBuilder();
              if (result.hasWaitTime) {
                subBuilder.MergeFrom(WaitTime);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              WaitTime = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLocation {
       get { return result.hasLocation; }
      }
      public global::atwork_pb_msgs.LocationIdentifier Location {
        get { return result.Location; }
        set { SetLocation(value); }
      }
      public Builder SetLocation(global::atwork_pb_msgs.LocationIdentifier value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLocation = true;
        result.location_ = value;
        return this;
      }
      public Builder SetLocation(global::atwork_pb_msgs.LocationIdentifier.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasLocation = true;
        result.location_ = builderForValue.Build();
        return this;
      }
      public Builder MergeLocation(global::atwork_pb_msgs.LocationIdentifier value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasLocation &&
            result.location_ != global::atwork_pb_msgs.LocationIdentifier.DefaultInstance) {
            result.location_ = global::atwork_pb_msgs.LocationIdentifier.CreateBuilder(result.location_).MergeFrom(value).BuildPartial();
        } else {
          result.location_ = value;
        }
        result.hasLocation = true;
        return this;
      }
      public Builder ClearLocation() {
        PrepareBuilder();
        result.hasLocation = false;
        result.location_ = null;
        return this;
      }
      
      public bool HasOrientation {
       get { return result.hasOrientation; }
      }
      public global::atwork_pb_msgs.NavigationTask.Types.Orientation Orientation {
        get { return result.Orientation; }
        set { SetOrientation(value); }
      }
      public Builder SetOrientation(global::atwork_pb_msgs.NavigationTask.Types.Orientation value) {
        PrepareBuilder();
        result.hasOrientation = true;
        result.orientation_ = value;
        return this;
      }
      public Builder ClearOrientation() {
        PrepareBuilder();
        result.hasOrientation = false;
        result.orientation_ = global::atwork_pb_msgs.NavigationTask.Types.Orientation.NORTH;
        return this;
      }
      
      public bool HasWaitTime {
       get { return result.hasWaitTime; }
      }
      public global::atwork_pb_msgs.Time WaitTime {
        get { return result.WaitTime; }
        set { SetWaitTime(value); }
      }
      public Builder SetWaitTime(global::atwork_pb_msgs.Time value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasWaitTime = true;
        result.waitTime_ = value;
        return this;
      }
      public Builder SetWaitTime(global::atwork_pb_msgs.Time.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasWaitTime = true;
        result.waitTime_ = builderForValue.Build();
        return this;
      }
      public Builder MergeWaitTime(global::atwork_pb_msgs.Time value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasWaitTime &&
            result.waitTime_ != global::atwork_pb_msgs.Time.DefaultInstance) {
            result.waitTime_ = global::atwork_pb_msgs.Time.CreateBuilder(result.waitTime_).MergeFrom(value).BuildPartial();
        } else {
          result.waitTime_ = value;
        }
        result.hasWaitTime = true;
        return this;
      }
      public Builder ClearWaitTime() {
        PrepareBuilder();
        result.hasWaitTime = false;
        result.waitTime_ = null;
        return this;
      }
    }
    static NavigationTask() {
      object.ReferenceEquals(global::atwork_pb_msgs.Proto.NavigationTask.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
