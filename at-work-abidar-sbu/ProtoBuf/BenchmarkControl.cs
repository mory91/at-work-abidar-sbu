// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace atwork_pb_msgs {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class BenchmarkControl {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_atwork_pb_msgs_BenchmarkControl__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.BenchmarkControl, global::atwork_pb_msgs.BenchmarkControl.Builder> internal__static_atwork_pb_msgs_BenchmarkControl__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static BenchmarkControl() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            string.Concat(
              "ChZCZW5jaG1hcmtDb250cm9sLnByb3RvEg5hdHdvcmtfcGJfbXNncxoUQmVu", 
              "Y2htYXJrU3RhdGUucHJvdG8isgEKEEJlbmNobWFya0NvbnRyb2wSQAoScGhh", 
              "c2VfdG9fdGVybWluYXRlGAEgAigOMiQuYXR3b3JrX3BiX21zZ3MuQmVuY2ht", 
              "YXJrU3RhdGUuUGhhc2USMwoFc3RhdGUYAiACKA4yJC5hdHdvcmtfcGJfbXNn", 
              "cy5CZW5jaG1hcmtTdGF0ZS5TdGF0ZSInCghDb21wVHlwZRIMCgdDT01QX0lE", 
              "ENAPEg0KCE1TR19UWVBFEJoDQjEKFm9yZy5hdHdvcmsuY29tbW9uX21zZ3NC", 
            "F0JlbmNobWFya0ZlZWRiYWNrUHJvdG9z"));
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_atwork_pb_msgs_BenchmarkControl__Descriptor = Descriptor.MessageTypes[0];
          internal__static_atwork_pb_msgs_BenchmarkControl__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::atwork_pb_msgs.BenchmarkControl, global::atwork_pb_msgs.BenchmarkControl.Builder>(internal__static_atwork_pb_msgs_BenchmarkControl__Descriptor,
                  new string[] { "PhaseToTerminate", "State", });
          return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            global::atwork_pb_msgs.Proto.BenchmarkState.Descriptor, 
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BenchmarkControl : pb::GeneratedMessage<BenchmarkControl, BenchmarkControl.Builder> {
    private BenchmarkControl() { }
    private static readonly BenchmarkControl defaultInstance = new BenchmarkControl().MakeReadOnly();
    private static readonly string[] _benchmarkControlFieldNames = new string[] { "phase_to_terminate", "state" };
    private static readonly uint[] _benchmarkControlFieldTags = new uint[] { 8, 16 };
    public static BenchmarkControl DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BenchmarkControl DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BenchmarkControl ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::atwork_pb_msgs.Proto.BenchmarkControl.internal__static_atwork_pb_msgs_BenchmarkControl__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BenchmarkControl, BenchmarkControl.Builder> InternalFieldAccessors {
      get { return global::atwork_pb_msgs.Proto.BenchmarkControl.internal__static_atwork_pb_msgs_BenchmarkControl__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum CompType {
        COMP_ID = 2000,
        MSG_TYPE = 410,
      }
      
    }
    #endregion
    
    public const int PhaseToTerminateFieldNumber = 1;
    private bool hasPhaseToTerminate;
    private global::atwork_pb_msgs.BenchmarkState.Types.Phase phaseToTerminate_ = global::atwork_pb_msgs.BenchmarkState.Types.Phase.EXECUTION;
    public bool HasPhaseToTerminate {
      get { return hasPhaseToTerminate; }
    }
    public global::atwork_pb_msgs.BenchmarkState.Types.Phase PhaseToTerminate {
      get { return phaseToTerminate_; }
    }
    
    public const int StateFieldNumber = 2;
    private bool hasState;
    private global::atwork_pb_msgs.BenchmarkState.Types.State state_ = global::atwork_pb_msgs.BenchmarkState.Types.State.RUNNING;
    public bool HasState {
      get { return hasState; }
    }
    public global::atwork_pb_msgs.BenchmarkState.Types.State State {
      get { return state_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasPhaseToTerminate) return false;
        if (!hasState) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _benchmarkControlFieldNames;
      if (hasPhaseToTerminate) {
        output.WriteEnum(1, field_names[0], (int) PhaseToTerminate, PhaseToTerminate);
      }
      if (hasState) {
        output.WriteEnum(2, field_names[1], (int) State, State);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPhaseToTerminate) {
        size += pb::CodedOutputStream.ComputeEnumSize(1, (int) PhaseToTerminate);
      }
      if (hasState) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) State);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BenchmarkControl ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BenchmarkControl ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BenchmarkControl ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BenchmarkControl ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BenchmarkControl ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BenchmarkControl ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BenchmarkControl ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BenchmarkControl ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BenchmarkControl ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BenchmarkControl ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BenchmarkControl MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BenchmarkControl prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BenchmarkControl, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BenchmarkControl cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BenchmarkControl result;
      
      private BenchmarkControl PrepareBuilder() {
        if (resultIsReadOnly) {
          BenchmarkControl original = result;
          result = new BenchmarkControl();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BenchmarkControl MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::atwork_pb_msgs.BenchmarkControl.Descriptor; }
      }
      
      public override BenchmarkControl DefaultInstanceForType {
        get { return global::atwork_pb_msgs.BenchmarkControl.DefaultInstance; }
      }
      
      public override BenchmarkControl BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BenchmarkControl) {
          return MergeFrom((BenchmarkControl) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BenchmarkControl other) {
        if (other == global::atwork_pb_msgs.BenchmarkControl.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPhaseToTerminate) {
          PhaseToTerminate = other.PhaseToTerminate;
        }
        if (other.HasState) {
          State = other.State;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_benchmarkControlFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _benchmarkControlFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.phaseToTerminate_, out unknown)) {
                result.hasPhaseToTerminate = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.state_, out unknown)) {
                result.hasState = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPhaseToTerminate {
       get { return result.hasPhaseToTerminate; }
      }
      public global::atwork_pb_msgs.BenchmarkState.Types.Phase PhaseToTerminate {
        get { return result.PhaseToTerminate; }
        set { SetPhaseToTerminate(value); }
      }
      public Builder SetPhaseToTerminate(global::atwork_pb_msgs.BenchmarkState.Types.Phase value) {
        PrepareBuilder();
        result.hasPhaseToTerminate = true;
        result.phaseToTerminate_ = value;
        return this;
      }
      public Builder ClearPhaseToTerminate() {
        PrepareBuilder();
        result.hasPhaseToTerminate = false;
        result.phaseToTerminate_ = global::atwork_pb_msgs.BenchmarkState.Types.Phase.EXECUTION;
        return this;
      }
      
      public bool HasState {
       get { return result.hasState; }
      }
      public global::atwork_pb_msgs.BenchmarkState.Types.State State {
        get { return result.State; }
        set { SetState(value); }
      }
      public Builder SetState(global::atwork_pb_msgs.BenchmarkState.Types.State value) {
        PrepareBuilder();
        result.hasState = true;
        result.state_ = value;
        return this;
      }
      public Builder ClearState() {
        PrepareBuilder();
        result.hasState = false;
        result.state_ = global::atwork_pb_msgs.BenchmarkState.Types.State.RUNNING;
        return this;
      }
    }
    static BenchmarkControl() {
      object.ReferenceEquals(global::atwork_pb_msgs.Proto.BenchmarkControl.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
